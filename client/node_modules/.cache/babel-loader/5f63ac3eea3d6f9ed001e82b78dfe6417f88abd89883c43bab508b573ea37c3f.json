{"ast":null,"code":"import axios from 'axios';\nconst {\n  kakao\n} = window;\n// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\nlet infowindow = new kakao.maps.InfoWindow({\n  zIndex: 1\n});\n\n// 키워드 검색을 요청하는 함수입니다\nexport function searchPlaces(inputKeyword) {\n  if (!inputKeyword.replace(/^\\s+|\\s+$/g, '')) {\n    alert('키워드를 입력해주세요!');\n    return false;\n  }\n  afterSearch(inputKeyword);\n}\nfunction afterSearch(keyword) {\n  // 마커를 담을 배열입니다\n  let markers = [];\n  let mapContainer = document.getElementById('map'),\n    // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(37.566826, 126.9786567),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n    };\n\n  // 지도를 생성합니다    \n  let map = new kakao.maps.Map(mapContainer, mapOption);\n\n  // 장소 검색 객체를 생성합니다\n  let ps = new kakao.maps.services.Places();\n  // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n\n  ps.keywordSearch(keyword, placesSearchCB, {\n    category_group_code: 'FD6' /*location: new kakao.maps.LatLng(37.566826, 126.9786567), radius: 10000*/\n  });\n\n  // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      // 정상적으로 검색이 완료됐으면\n      // 검색 목록과 마커를 표출합니다\n      displayPlaces(data);\n\n      // 페이지 번호를 표출합니다\n      displayPagination(pagination);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n      alert('검색 결과가 존재하지 않습니다.');\n      return;\n    } else if (status === kakao.maps.services.Status.ERROR) {\n      alert('검색 결과 중 오류가 발생했습니다.');\n      return;\n    }\n  }\n\n  // 검색 결과 목록과 마커를 표출하는 함수입니다\n  function displayPlaces(places) {\n    // console.log(places)\n\n    //검색한 음식점 정보 저장\n    axios.post(\"http://localhost:8080/restaurant\", places);\n    let listEl = document.getElementById('placesList'),\n      menuEl = document.getElementById('menu_wrap'),\n      fragment = document.createDocumentFragment(),\n      bounds = new kakao.maps.LatLngBounds(),\n      li0stStr = '';\n\n    // 검색 결과 목록에 추가된 항목들을 제거합니다\n    removeAllChildNods(listEl);\n\n    // 지도에 표시되고 있는 마커를 제거합니다\n    removeMarker();\n    for (let i = 0; i < places.length; i++) {\n      // 마커를 생성하고 지도에 표시합니다\n      let placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\n        marker = addMarker(placePosition, i, \"ex_title\"),\n        itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다  \n\n      // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n      // LatLngBounds 객체에 좌표를 추가합니다\n      bounds.extend(placePosition);\n\n      // 마커와 검색결과 항목에 mouseover 했을때\n      // 해당 장소에 인포윈도우에 장소명을 표시합니다\n      // mouseout 했을 때는 인포윈도우를 닫습니다\n      (function (marker, title) {\n        kakao.maps.event.addListener(marker, 'mouseover', function () {\n          displayInfowindow(marker, title);\n        });\n        kakao.maps.event.addListener(marker, 'mouseout', function () {\n          infowindow.close();\n        });\n        itemEl.onmouseover = function () {\n          displayInfowindow(marker, title);\n        };\n        itemEl.onmouseout = function () {\n          infowindow.close();\n        };\n      })(marker, places[i].place_name);\n      fragment.appendChild(itemEl);\n    }\n\n    // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\n    listEl === null || listEl === void 0 ? void 0 : listEl.appendChild(fragment);\n    if (menuEl !== null && menuEl !== void 0 && menuEl.scrollTop) menuEl.scrollTop = 0;\n\n    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n    map.setBounds(bounds);\n  }\n\n  // 검색결과 항목을 Element로 반환하는 함수입니다\n  function getListItem(index, places) {\n    console.log(places);\n    let el = document.createElement('li');\n    let itemStr = `<a href=\"/place/${places.id}\">` + '<div><span class=\"markerbg marker_' + (index + 1) + '\"></span>' + '<div class=\"info\">' + '   <h5>' + places.place_name + '</h5>';\n    if (places.road_address_name) {\n      itemStr += '    <span>' + places.road_address_name + '</span>' + '   <span class=\"jibun gray\">' + places.address_name + '</span>';\n    } else {\n      itemStr += '    <span>' + places.address_name + '</span>';\n    }\n    itemStr += '  <span class=\"tel\">' + places.phone + '</span>' + '</div></div></a>';\n    el.innerHTML = itemStr;\n    el.className = 'item';\n    // el.addEventListener('click', () => {onRestaurantClick(places.id, places.place_name)})\n    return el;\n  }\n\n  // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n  function addMarker(position, idx, title) {\n    let imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png',\n      // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(36, 37),\n      // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(36, 691),\n        // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10),\n        // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n      },\n      markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n      marker = new kakao.maps.Marker({\n        position: position,\n        // 마커의 위치\n        image: markerImage\n      });\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  }\n\n  // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n  function removeMarker() {\n    for (let i = 0; i < markers.length; i++) {\n      markers[i].setMap(null);\n    }\n    markers = [];\n  }\n\n  // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\n  function displayPagination(pagination) {\n    let paginationEl = document.getElementById('pagination'),\n      fragment = document.createDocumentFragment(),\n      i;\n\n    // 기존에 추가된 페이지번호를 삭제합니다\n    while (paginationEl !== null && paginationEl !== void 0 && paginationEl.hasChildNodes()) {\n      if (paginationEl.lastChild) paginationEl.removeChild(paginationEl.lastChild);\n    }\n    for (i = 1; i <= pagination.last; i++) {\n      let el = document.createElement('a');\n      el.href = \"#\";\n      el.innerHTML = '' + i;\n      if (i === pagination.current) {\n        el.className = 'on';\n      } else {\n        el.onclick = function (i) {\n          return function () {\n            pagination.gotoPage(i);\n          };\n        }(i);\n      }\n      fragment.appendChild(el);\n    }\n    paginationEl === null || paginationEl === void 0 ? void 0 : paginationEl.appendChild(fragment);\n  }\n\n  // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n  // 인포윈도우에 장소명을 표시합니다\n  function displayInfowindow(marker, title) {\n    let content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n    infowindow.setContent(content);\n    infowindow.open(map, marker);\n  }\n\n  // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n  function removeAllChildNods(el) {\n    while (el.hasChildNodes()) {\n      el.removeChild(el.lastChild);\n    }\n  }\n}","map":{"version":3,"names":["axios","kakao","window","infowindow","maps","InfoWindow","zIndex","searchPlaces","inputKeyword","replace","alert","afterSearch","keyword","markers","mapContainer","document","getElementById","mapOption","center","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","category_group_code","data","status","pagination","Status","OK","displayPlaces","displayPagination","ZERO_RESULT","ERROR","places","post","listEl","menuEl","fragment","createDocumentFragment","bounds","LatLngBounds","li0stStr","removeAllChildNods","removeMarker","i","length","placePosition","y","x","marker","addMarker","itemEl","getListItem","extend","title","event","addListener","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","scrollTop","setBounds","index","console","log","el","createElement","itemStr","id","road_address_name","address_name","phone","innerHTML","className","position","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","setMap","push","paginationEl","hasChildNodes","lastChild","removeChild","last","href","current","onclick","gotoPage","content","setContent","open"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/function/Search.ts"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst { kakao } = window as any;\r\n\r\ninterface placeType {\r\n    id: Number\r\n    place_name: string,\r\n    road_address_name: string,\r\n    address_name: string,\r\n    phone: string,\r\n    place_url: string\r\n}\r\n\r\n// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\nlet infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n// 키워드 검색을 요청하는 함수입니다\r\nexport function searchPlaces(inputKeyword: string) {\r\n    if (!inputKeyword.replace(/^\\s+|\\s+$/g, '')) {\r\n        alert('키워드를 입력해주세요!');\r\n        return false;\r\n    }\r\n\r\n    afterSearch(inputKeyword);\r\n}\r\n\r\nfunction afterSearch(keyword: string) {\r\n    // 마커를 담을 배열입니다\r\n    let markers: any[] = [];\r\n\r\n    let mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n        mapOption = {\r\n            center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n            level: 3 // 지도의 확대 레벨\r\n        };\r\n\r\n    // 지도를 생성합니다    \r\n    let map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n    // 장소 검색 객체를 생성합니다\r\n    let ps = new kakao.maps.services.Places();\r\n    // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n\r\n    ps.keywordSearch(keyword, placesSearchCB, { category_group_code: 'FD6',/*location: new kakao.maps.LatLng(37.566826, 126.9786567), radius: 10000*/ });\r\n\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n    function placesSearchCB(data: any, status: any, pagination: any) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n\r\n            // 정상적으로 검색이 완료됐으면\r\n            // 검색 목록과 마커를 표출합니다\r\n            displayPlaces(data);\r\n\r\n            // 페이지 번호를 표출합니다\r\n            displayPagination(pagination);\r\n\r\n        } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n\r\n            alert('검색 결과가 존재하지 않습니다.');\r\n            return;\r\n\r\n        } else if (status === kakao.maps.services.Status.ERROR) {\r\n\r\n            alert('검색 결과 중 오류가 발생했습니다.');\r\n            return;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n    function displayPlaces(places: any) {\r\n        // console.log(places)\r\n\r\n        //검색한 음식점 정보 저장\r\n        axios.post(\"http://localhost:8080/restaurant\",places);\r\n        let listEl = document.getElementById('placesList'),\r\n            menuEl = document.getElementById('menu_wrap'),\r\n            fragment = document.createDocumentFragment(),\r\n            bounds = new kakao.maps.LatLngBounds(),\r\n            li0stStr = '';\r\n\r\n        // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n        removeAllChildNods(listEl);\r\n\r\n        // 지도에 표시되고 있는 마커를 제거합니다\r\n        removeMarker();\r\n\r\n        for (let i = 0; i < places.length; i++) {\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            let placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n                marker = addMarker(placePosition, i, \"ex_title\"),\r\n                itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다  \r\n\r\n            // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n            // LatLngBounds 객체에 좌표를 추가합니다\r\n            bounds.extend(placePosition);\r\n\r\n            // 마커와 검색결과 항목에 mouseover 했을때\r\n            // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n            // mouseout 했을 때는 인포윈도우를 닫습니다\r\n            (function (marker, title) {\r\n                kakao.maps.event.addListener(marker, 'mouseover', function () {\r\n                    displayInfowindow(marker, title);\r\n                });\r\n\r\n                kakao.maps.event.addListener(marker, 'mouseout', function () {\r\n                    infowindow.close();\r\n                });\r\n\r\n                itemEl.onmouseover = function () {\r\n                    displayInfowindow(marker, title);\r\n                };\r\n\r\n                itemEl.onmouseout = function () {\r\n                    infowindow.close();\r\n                };\r\n            })(marker, places[i].place_name);\r\n\r\n            fragment.appendChild(itemEl);\r\n        }\r\n\r\n        // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\r\n        listEl?.appendChild(fragment);\r\n        if (menuEl?.scrollTop) menuEl.scrollTop = 0;\r\n\r\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n        map.setBounds(bounds);\r\n    }\r\n\r\n    // 검색결과 항목을 Element로 반환하는 함수입니다\r\n    function getListItem(index: number, places: placeType) {\r\n        console.log(places)\r\n        let el = document.createElement('li')\r\n        let itemStr = `<a href=\"/place/${places.id}\">` + '<div><span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n            '<div class=\"info\">' +\r\n            '   <h5>' + places.place_name + '</h5>';\r\n\r\n        if (places.road_address_name) {\r\n            itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n                '   <span class=\"jibun gray\">' + places.address_name + '</span>';\r\n        } else {\r\n            itemStr += '    <span>' + places.address_name + '</span>';\r\n        }\r\n\r\n        itemStr += '  <span class=\"tel\">' + places.phone + '</span>' +\r\n            '</div></div></a>';\r\n\r\n        el.innerHTML = itemStr;\r\n        el.className = 'item';\r\n        // el.addEventListener('click', () => {onRestaurantClick(places.id, places.place_name)})\r\n        return el;\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position: any, idx: any, title: any) {\r\n        let imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n            imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n            imgOptions = {\r\n                spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n                spriteOrigin: new kakao.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n                offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n            },\r\n            markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n            marker = new kakao.maps.Marker({\r\n                position: position, // 마커의 위치\r\n                image: markerImage\r\n            });\r\n\r\n        marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n        markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n\r\n        return marker;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n        for (let i = 0; i < markers.length; i++) {\r\n            markers[i].setMap(null);\r\n        }\r\n        markers = [];\r\n    }\r\n\r\n    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n    function displayPagination(pagination: any) {\r\n        let paginationEl = document.getElementById('pagination'),\r\n            fragment = document.createDocumentFragment(),\r\n            i;\r\n\r\n        // 기존에 추가된 페이지번호를 삭제합니다\r\n        while (paginationEl?.hasChildNodes()) {\r\n            if (paginationEl.lastChild) paginationEl.removeChild(paginationEl.lastChild);\r\n        }\r\n\r\n        for (i = 1; i <= pagination.last; i++) {\r\n            let el = document.createElement('a');\r\n            el.href = \"#\";\r\n            el.innerHTML = '' + i;\r\n\r\n            if (i === pagination.current) {\r\n                el.className = 'on';\r\n            } else {\r\n                el.onclick = (function (i) {\r\n                    return function () {\r\n                        pagination.gotoPage(i);\r\n                    }\r\n                })(i);\r\n            }\r\n\r\n            fragment.appendChild(el);\r\n        }\r\n        paginationEl?.appendChild(fragment);\r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    function displayInfowindow(marker: any, title: any) {\r\n        let content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n\r\n        infowindow.setContent(content);\r\n        infowindow.open(map, marker);\r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el: any) {\r\n        while (el.hasChildNodes()) {\r\n            el.removeChild(el.lastChild);\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}