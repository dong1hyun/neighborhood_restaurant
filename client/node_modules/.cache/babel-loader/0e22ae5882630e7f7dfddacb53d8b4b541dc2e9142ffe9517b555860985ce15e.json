{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;// import { useForm } from \"react-hook-form\"\n// import styled from \"styled-components\"\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\n// import axios from \"axios\";\n// import { AnimatePresence, motion } from \"framer-motion\"\n// const Nav = styled.div`\n//     display: flex;\n//     justify-content: space-between;\n//     background-color: black;\n//     height: 100px;\n//     width: 100%;\n//     @media screen and (max-width: 700px) {\n//         flex-direction: column;\n//         align-items: flex-start;\n//         height: 250px;\n// }\n// `\n// const Logo = styled(motion.div)`\n//     text-decoration: none;\n//     color: white;\n//     margin-left: 30px;\n//     margin-top:33px;\n//     margin-bottom: 10px;\n//     cursor: pointer;\n//     font-size: 40px;\n//     font-family: \"Black Han Sans\", sans-serif;\n//     font-weight: 400;\n//     font-style: normal;\n// `\n// // const SearchContainer = styled.div`\n// //     position: relative;\n// //     background-color: whitesmoke;\n// //     width: 400px;\n// //     height: 50px;\n// //     margin: 25px;\n// //     border-radius: 10px;\n// // `\n// const Search = styled.form`\n//     position: relative;\n//     background-color: whitesmoke;\n//     width: 400px;\n//     height: 50px;\n//     margin: 25px;\n//     border-radius: 10px;\n// `\n// const SearchInput = styled.input`\n//     position: absolute;\n//     left: 35px;\n//     top: 10px;\n//     width: 300px;\n//     height: 30px;\n//     font-size: 20px;\n//     border-radius: 10px;\n//     border-width: 0;\n//     background-color: whitesmoke;\n//     border-width: 0px;\n//     outline: none;\n// `\n// const SearchBtn = styled.button`\n//     position: absolute;\n//     background-color: transparent;\n//     border-width: 0px;\n//     top: 15px;\n//     right: 10px;\n//     width: 50px;\n// `\n// const DeleteBtn = styled(motion.button)`\n//     position: absolute;\n//     top: 13px;\n//     left: 5px;\n//     margin-right: 100yypx;\n//     background-color: transparent;\n//     border-radius: 5px;\n//     background-color: #d8d8d8;\n//     border-width: 0px;\n//     hover: {scale: 1.2}\n// `\n// const LoginContainer = styled.div`\n//     margin: 20px;\n// `\n// const Login = styled(motion.div)`\n//     color: white;\n//     margin: 10px;\n//     cursor: pointer;\n// `\n// interface DataForm {\n//     search: string\n// }\n// export default function Header() {\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\n//     const navigate = useNavigate();\n//     const setSearchWord = useSetRecoilState(keyword);\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\n//     const onValid = ({ search }: DataForm) => {\n//         setSearchWord(search);\n//         // console.log(\"header:\", search)\n//         navigate(`/search?keyword=${search}`);\n//     }\n//     const searchTypeClick = async () => {\n//         setIsNeighborhood((cur) => !cur)\n//     }\n//     const setRegisterShowing = useSetRecoilState(register_showing);\n//     const onRegisterClick = () => {\n//         setRegisterShowing((cur) => !cur);\n//     }\n//     return (\n//         <>\n//             <Nav>\n//             <Logo\n//                 transition={{ type: \"spring\", damping: 10 }}\n//                 initial={{ scale: 0 }}\n//                 animate={{ scale: 1 }}\n//                 whileHover={{ scale: 1.2 }}\n//                 onClick={() => navigate(\"/\")}>\n//                     동네맛집\n//                 </Logo>\n//                 <Search onSubmit={handleSubmit(onValid)}>\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\n//                     <SearchInput {...register(\"search\", { required: true })} />\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//                     </svg></SearchBtn>\n//                 </Search>\n//                 <LoginContainer>\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\n//                 </LoginContainer>\n//             </Nav>  \n//         </>\n//     )\n// }\nimport{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{useNavigate}from\"react-router-dom\";import{useRecoilState,useSetRecoilState}from\"recoil\";import{keyword,neighborhood_search,register_showing}from\"../atom\";import{motion}from\"framer-motion\";import React,{useState,useEffect}from\"react\";// useState와 useEffect import 추가\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Nav=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center; /* \\uCD94\\uAC00: \\uC544\\uC774\\uD15C\\uC744 \\uC218\\uC9C1 \\uC911\\uC559 \\uC815\\uB82C */\\n    background-color: black;\\n    height: 100px;\\n    width: 100%;\\n    @media screen and (max-width: 700px) {\\n        flex-direction: column;\\n        align-items: flex-start;\\n        height: 250px;\\n    }\\n\"])));const Logo=styled(motion.div)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    text-decoration: none;\\n    color: white;\\n    margin-left: 30px;\\n    cursor: pointer;\\n    font-size: 40px;\\n    font-family: \\\"Black Han Sans\\\", sans-serif;\\n    font-weight: 400;\\n    font-style: normal;\\n\"])));const Search=styled.form(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    position: relative;\\n    background-color: whitesmoke;\\n    width: 400px;\\n    height: 50px;\\n    margin: 25px;\\n    border-radius: 10px;\\n\"])));const SearchInput=styled.input(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    left: 35px;\\n    top: 10px;\\n    width: 300px;\\n    height: 30px;\\n    font-size: 20px;\\n    border-radius: 10px;\\n    border-width: 0;\\n    background-color: whitesmoke;\\n    border-width: 0px;\\n    outline: none;\\n\"])));const SearchBtn=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    background-color: transparent;\\n    border-width: 0px;\\n    top: 15px;\\n    right: 10px;\\n    width: 50px;\\n\"])));const DeleteBtn=styled(motion.button)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 13px;\\n    left: 5px;\\n    background-color: transparent;\\n    border-radius: 5px;\\n    background-color: #d8d8d8;\\n    border-width: 0px;\\n    hover: {scale: 1.2}\\n\"])));const LoginContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center; /* \\uCD94\\uAC00: \\uC544\\uC774\\uD15C\\uC744 \\uC218\\uC9C1 \\uC911\\uC559 \\uC815\\uB82C */\\n    margin: 20px;\\n\"])));const Login=styled(motion.div)(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n    color: white;\\n    margin: 10px;\\n    cursor: pointer;\\n\"])));const UserInfo=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n    color: white;\\n    margin-right: 20px;\\n\"])));export default function Header(){const{register,handleSubmit,getValues,watch}=useForm();const navigate=useNavigate();const setSearchWord=useSetRecoilState(keyword);const[isNeighborhood,setIsNeighborhood]=useRecoilState(neighborhood_search);const[isLoggedIn,setIsLoggedIn]=useState(false);// 추가: 로그인 상태 관리\nconst[username,setUsername]=useState('');// 추가: 사용자 이름 상태\nconst onValid=_ref=>{let{search}=_ref;setSearchWord(search);navigate(\"/search?keyword=\".concat(search));};const searchTypeClick=async()=>{setIsNeighborhood(cur=>!cur);};const setRegisterShowing=useSetRecoilState(register_showing);const onRegisterClick=()=>{setRegisterShowing(cur=>!cur);};useEffect(()=>{// 추가: 페이지 로드시 로그인 상태 확인\n// 예시로 localStorage에 로그인 정보를 저장했다고 가정합니다.\nconst isLoggedIn=localStorage.getItem('isLoggedIn');if(isLoggedIn==='true'){setIsLoggedIn(true);const savedUsername=localStorage.getItem('username');if(savedUsername){setUsername(savedUsername);}}},[]);const handleLogout=()=>{// 추가: 로그아웃 처리\nsetIsLoggedIn(false);localStorage.removeItem('isLoggedIn');localStorage.removeItem('username');// 기타 로그아웃 관련 처리 (예: 서버로 로그아웃 요청 등)\n};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Nav,{children:[/*#__PURE__*/_jsx(Logo,{transition:{type:\"spring\",damping:10},initial:{scale:0},animate:{scale:1},whileHover:{scale:1.2},onClick:()=>navigate(\"/\"),children:\"\\uB3D9\\uB124\\uB9DB\\uC9D1\"}),/*#__PURE__*/_jsxs(Search,{onSubmit:handleSubmit(onValid),children:[watch(\"search\")?/*#__PURE__*/_jsx(DeleteBtn,{className:\"btn-close\",\"aria-label\":\"Close\",type:\"reset\"}):null,/*#__PURE__*/_jsx(SearchInput,{...register(\"search\",{required:true})}),/*#__PURE__*/_jsx(SearchBtn,{type:\"submit\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"25\",height:\"25\",fill:\"currentColor\",className:\"bi bi-search\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"})})})]}),/*#__PURE__*/_jsx(LoginContainer,{children:isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(UserInfo,{children:username}),/*#__PURE__*/_jsx(Login,{onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Login,{onClick:()=>navigate(\"/register\"),children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(Login,{onClick:()=>navigate(\"/login\"),children:\"\\uB85C\\uADF8\\uC778\"})]})})]})});}","map":{"version":3,"names":["useForm","styled","useNavigate","useRecoilState","useSetRecoilState","keyword","neighborhood_search","register_showing","motion","React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Nav","div","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","Search","form","_templateObject3","SearchInput","input","_templateObject4","SearchBtn","button","_templateObject5","DeleteBtn","_templateObject6","LoginContainer","_templateObject7","Login","_templateObject8","UserInfo","_templateObject9","Header","register","handleSubmit","getValues","watch","navigate","setSearchWord","isNeighborhood","setIsNeighborhood","isLoggedIn","setIsLoggedIn","username","setUsername","onValid","_ref","search","concat","searchTypeClick","cur","setRegisterShowing","onRegisterClick","localStorage","getItem","savedUsername","handleLogout","removeItem","children","transition","type","damping","initial","scale","animate","whileHover","onClick","onSubmit","className","required","xmlns","width","height","fill","viewBox","d"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/Header.tsx"],"sourcesContent":["// import { useForm } from \"react-hook-form\"\r\n// import styled from \"styled-components\"\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\r\n// import axios from \"axios\";\r\n// import { AnimatePresence, motion } from \"framer-motion\"\r\n\r\n\r\n// const Nav = styled.div`\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     background-color: black;\r\n//     height: 100px;\r\n//     width: 100%;\r\n//     @media screen and (max-width: 700px) {\r\n//         flex-direction: column;\r\n//         align-items: flex-start;\r\n//         height: 250px;\r\n// }\r\n// `\r\n\r\n// const Logo = styled(motion.div)`\r\n//     text-decoration: none;\r\n//     color: white;\r\n//     margin-left: 30px;\r\n//     margin-top:33px;\r\n//     margin-bottom: 10px;\r\n//     cursor: pointer;\r\n//     font-size: 40px;\r\n//     font-family: \"Black Han Sans\", sans-serif;\r\n//     font-weight: 400;\r\n//     font-style: normal;\r\n// `\r\n\r\n// // const SearchContainer = styled.div`\r\n// //     position: relative;\r\n// //     background-color: whitesmoke;\r\n// //     width: 400px;\r\n// //     height: 50px;\r\n// //     margin: 25px;\r\n// //     border-radius: 10px;\r\n// // `\r\n\r\n// const Search = styled.form`\r\n//     position: relative;\r\n//     background-color: whitesmoke;\r\n//     width: 400px;\r\n//     height: 50px;\r\n//     margin: 25px;\r\n//     border-radius: 10px;\r\n// `\r\n\r\n// const SearchInput = styled.input`\r\n//     position: absolute;\r\n//     left: 35px;\r\n//     top: 10px;\r\n//     width: 300px;\r\n//     height: 30px;\r\n//     font-size: 20px;\r\n//     border-radius: 10px;\r\n//     border-width: 0;\r\n//     background-color: whitesmoke;\r\n//     border-width: 0px;\r\n//     outline: none;\r\n// `\r\n\r\n// const SearchBtn = styled.button`\r\n//     position: absolute;\r\n//     background-color: transparent;\r\n//     border-width: 0px;\r\n//     top: 15px;\r\n//     right: 10px;\r\n//     width: 50px;\r\n// `\r\n\r\n// const DeleteBtn = styled(motion.button)`\r\n//     position: absolute;\r\n//     top: 13px;\r\n//     left: 5px;\r\n//     margin-right: 100yypx;\r\n//     background-color: transparent;\r\n//     border-radius: 5px;\r\n//     background-color: #d8d8d8;\r\n//     border-width: 0px;\r\n//     hover: {scale: 1.2}\r\n// `\r\n\r\n// const LoginContainer = styled.div`\r\n//     margin: 20px;\r\n// `\r\n\r\n// const Login = styled(motion.div)`\r\n//     color: white;\r\n//     margin: 10px;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// interface DataForm {\r\n//     search: string\r\n// }\r\n\r\n// export default function Header() {\r\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n//     const navigate = useNavigate();\r\n//     const setSearchWord = useSetRecoilState(keyword);\r\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n//     const onValid = ({ search }: DataForm) => {\r\n//         setSearchWord(search);\r\n//         // console.log(\"header:\", search)\r\n//         navigate(`/search?keyword=${search}`);\r\n//     }\r\n//     const searchTypeClick = async () => {\r\n//         setIsNeighborhood((cur) => !cur)\r\n//     }\r\n//     const setRegisterShowing = useSetRecoilState(register_showing);\r\n//     const onRegisterClick = () => {\r\n//         setRegisterShowing((cur) => !cur);\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <Nav>\r\n//             <Logo\r\n//                 transition={{ type: \"spring\", damping: 10 }}\r\n//                 initial={{ scale: 0 }}\r\n//                 animate={{ scale: 1 }}\r\n//                 whileHover={{ scale: 1.2 }}\r\n//                 onClick={() => navigate(\"/\")}>\r\n//                     동네맛집\r\n//                 </Logo>\r\n//                 <Search onSubmit={handleSubmit(onValid)}>\r\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n//                     <SearchInput {...register(\"search\", { required: true })} />\r\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n//                     </svg></SearchBtn>\r\n//                 </Search>\r\n//                 <LoginContainer>\r\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\r\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\r\n//                 </LoginContainer>\r\n//             </Nav>  \r\n//         </>\r\n//     )\r\n// }\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { keyword, neighborhood_search, register_showing } from \"../atom\";\r\nimport axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport React, { useState, useEffect } from \"react\"; // useState와 useEffect import 추가\r\n\r\n\r\nconst Nav = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\r\n    background-color: black;\r\n    height: 100px;\r\n    width: 100%;\r\n    @media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        height: 250px;\r\n    }\r\n`;\r\n\r\nconst Logo = styled(motion.div)`\r\n    text-decoration: none;\r\n    color: white;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n    font-size: 40px;\r\n    font-family: \"Black Han Sans\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n`;\r\n\r\nconst Search = styled.form`\r\n    position: relative;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 50px;\r\n    margin: 25px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 10px;\r\n    width: 300px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border-width: 0;\r\n    background-color: whitesmoke;\r\n    border-width: 0px;\r\n    outline: none;\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n    position: absolute;\r\n    background-color: transparent;\r\n    border-width: 0px;\r\n    top: 15px;\r\n    right: 10px;\r\n    width: 50px;\r\n`;\r\n\r\nconst DeleteBtn = styled(motion.button)`\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 5px;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    background-color: #d8d8d8;\r\n    border-width: 0px;\r\n    hover: {scale: 1.2}\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    display: flex;\r\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\r\n    margin: 20px;\r\n`;\r\n\r\nconst Login = styled(motion.div)`\r\n    color: white;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    color: white;\r\n    margin-right: 20px;\r\n`;\r\n\r\ninterface DataForm {\r\n    search: string;\r\n}\r\n\r\nexport default function Header() {\r\n    const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n    const navigate = useNavigate();\r\n    const setSearchWord = useSetRecoilState(keyword);\r\n    const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // 추가: 로그인 상태 관리\r\n    const [username, setUsername] = useState(''); // 추가: 사용자 이름 상태\r\n\r\n    const onValid = ({ search }: DataForm) => {\r\n        setSearchWord(search);\r\n        navigate(`/search?keyword=${search}`);\r\n    };\r\n\r\n    const searchTypeClick = async () => {\r\n        setIsNeighborhood((cur) => !cur);\r\n    };\r\n\r\n    const setRegisterShowing = useSetRecoilState(register_showing);\r\n\r\n    const onRegisterClick = () => {\r\n        setRegisterShowing((cur) => !cur);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 추가: 페이지 로드시 로그인 상태 확인\r\n        // 예시로 localStorage에 로그인 정보를 저장했다고 가정합니다.\r\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n        if (isLoggedIn === 'true') {\r\n            setIsLoggedIn(true);\r\n            const savedUsername = localStorage.getItem('username');\r\n            if (savedUsername) {\r\n                setUsername(savedUsername);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        // 추가: 로그아웃 처리\r\n        setIsLoggedIn(false);\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('username');\r\n        // 기타 로그아웃 관련 처리 (예: 서버로 로그아웃 요청 등)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <Logo\r\n                    transition={{ type: \"spring\", damping: 10 }}\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    whileHover={{ scale: 1.2 }}\r\n                    onClick={() => navigate(\"/\")}\r\n                >\r\n                    동네맛집\r\n                </Logo>\r\n                <Search onSubmit={handleSubmit(onValid)}>\r\n                    {watch(\"search\") ? (\r\n                        <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" />\r\n                    ) : null}\r\n                    <SearchInput {...register(\"search\", { required: true })} />\r\n                    <SearchBtn type=\"submit\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"25\"\r\n                            height=\"25\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-search\"\r\n                            viewBox=\"0 0 16 16\"\r\n                        >\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n                        </svg>\r\n                    </SearchBtn>\r\n                </Search>\r\n                <LoginContainer>\r\n                    {isLoggedIn ? (\r\n                        <>\r\n                            <UserInfo>{username}</UserInfo>\r\n                            <Login onClick={handleLogout}>로그아웃</Login>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login onClick={() => navigate(\"/register\")}>회원가입</Login>\r\n                            <Login onClick={() => navigate(\"/login\")}>로그인</Login>\r\n                        </>\r\n                    )}\r\n                </LoginContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n}\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}