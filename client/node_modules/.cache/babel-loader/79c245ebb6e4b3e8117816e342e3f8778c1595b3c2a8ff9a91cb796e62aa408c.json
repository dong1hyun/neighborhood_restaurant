{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\neighborhood_restaurant\\\\client\\\\src\\\\components\\\\MylocationBox.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Place_Img = styled.img`\n    margin: 0 auto;\n    margin-top: 40px;\n    width: 80%;\n    height: 300px;\n    border-radius: 10px;\n`;\nexport default function MyLocationBox({\n  userId\n}) {\n  _s();\n  const [coordinates, setCoordinates] = useState({\n    x: null,\n    y: null\n  });\n  const handleSaveLocation = async () => {\n    try {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCoordinates({\n          x: longitude,\n          y: latitude\n        });\n        await axios.post('/location', {\n          id: userId,\n          x: longitude,\n          y: latitude\n        });\n        alert('위치가 성공적으로 저장되었습니다.');\n      });\n    } catch (error) {\n      console.error('위치 저장 중 오류가 발생했습니다:', error);\n      alert('위치를 저장하는 도중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveLocation,\n      children: \"\\uB0B4 \\uC704\\uCE58 \\uC800\\uC7A5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uC704\\uCE58 \\uC88C\\uD45C: \", coordinates.x, \", \", coordinates.y]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(MyLocationBox, \"KCQTrwoub6A4Qh1fgTmte3FZDME=\");\n_c = MyLocationBox;\nvar _c;\n$RefreshReg$(_c, \"MyLocationBox\");","map":{"version":3,"names":["axios","useState","styled","jsxDEV","_jsxDEV","Place_Img","img","MyLocationBox","userId","_s","coordinates","setCoordinates","x","y","handleSaveLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","post","id","alert","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/MylocationBox.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface MyLocationBoxProps {\r\n    userId: string; // 사용자 id\r\n}\r\n\r\nconst Place_Img = styled.img`\r\n    margin: 0 auto;\r\n    margin-top: 40px;\r\n    width: 80%;\r\n    height: 300px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport default function MyLocationBox({ userId }: MyLocationBoxProps) {\r\n    const [coordinates, setCoordinates] = useState<{ x: number | null, y: number | null }>({ x: null, y: null });\r\n\r\n    const handleSaveLocation = async () => {\r\n        try {\r\n            navigator.geolocation.getCurrentPosition(async (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                setCoordinates({ x: longitude, y: latitude });\r\n                \r\n                await axios.post('/location', { id: userId, x: longitude, y: latitude });\r\n                alert('위치가 성공적으로 저장되었습니다.');\r\n            });\r\n        } catch (error) {\r\n            console.error('위치 저장 중 오류가 발생했습니다:', error);\r\n            alert('위치를 저장하는 도중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleSaveLocation}>내 위치 저장</button>\r\n            <p>현재 위치 좌표: {coordinates.x}, {coordinates.y}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASC,aAAaA,CAAC;EAAEC;AAA2B,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAyC;IAAEW,CAAC,EAAE,IAAI;IAAEC,CAAC,EAAE;EAAK,CAAC,CAAC;EAE5G,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;QACzD,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CV,cAAc,CAAC;UAAEC,CAAC,EAAEQ,SAAS;UAAEP,CAAC,EAAEM;QAAS,CAAC,CAAC;QAE7C,MAAMnB,KAAK,CAACsB,IAAI,CAAC,WAAW,EAAE;UAAEC,EAAE,EAAEf,MAAM;UAAEI,CAAC,EAAEQ,SAAS;UAAEP,CAAC,EAAEM;QAAS,CAAC,CAAC;QACxEK,KAAK,CAAC,oBAAoB,CAAC;MAC/B,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CD,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAQwB,OAAO,EAAEd,kBAAmB;MAAAa,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrD5B,OAAA;MAAAuB,QAAA,GAAG,0CAAU,EAACjB,WAAW,CAACE,CAAC,EAAC,IAAE,EAACF,WAAW,CAACG,CAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd;AAACvB,EAAA,CAxBuBF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}