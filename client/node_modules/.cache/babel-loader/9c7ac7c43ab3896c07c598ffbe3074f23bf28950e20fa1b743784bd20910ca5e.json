{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\neighborhood_restaurant\\\\client\\\\src\\\\components\\\\RegisterBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport axios from 'axios'; // axios import 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContainer = styled(motion.div)`\n    position: absolute;\n    z-index: 1;\n    top: 300px;\n    text-align: center;\n    background-color: whitesmoke;\n    width: 400px;\n    height: 200px;\n    background-color: rgba(255, 255, 255, 1);\n    border-radius: 40px;\n    position: absolute;\n    top: 200px;\n    left: 0px;\n    right: 0px;\n    margin: 0 auto;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n_c = RegisterContainer;\nconst boxVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0\n  },\n  visible: {\n    opacity: 1,\n    scale: 1\n  },\n  leaving: {\n    opacity: 0,\n    scale: 0\n  }\n};\nexport default function RegisterBox() {\n  _s();\n  const [formData, setFormData] = useState({\n    id: '',\n    password: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault(); // 폼 기본 제출 동작 방지\n    try {\n      const response = await axios.post('/register', formData); // URL 수정\n      console.log(response.data); // 서버에서 받은 응답 데이터\n      // 회원가입 성공 처리 코드 추가\n    } catch (error) {\n      console.error('회원가입 중 오류가 발생했습니다:', error);\n      // 회원가입 실패 처리 코드 추가\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(RegisterContainer, {\n    variants: boxVariants,\n    initial: \"initial\",\n    animate: \"visible\",\n    exit: \"leaving\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC544\\uC774\\uB514:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"id\",\n          value: formData.id,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\" // 비밀번호 타입으로 수정\n          ,\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterBox, \"7cdGtJd1CIzf6KLjhCNsDLzGWPU=\");\n_c2 = RegisterBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterContainer\");\n$RefreshReg$(_c2, \"RegisterBox\");","map":{"version":3,"names":["React","useState","motion","styled","axios","jsxDEV","_jsxDEV","RegisterContainer","div","_c","boxVariants","initial","opacity","scale","visible","leaving","RegisterBox","_s","formData","setFormData","id","password","handleSubmit","e","preventDefault","response","post","console","log","data","error","handleChange","target","name","value","variants","animate","exit","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/RegisterBox.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\nimport axios from 'axios'; // axios import 추가\r\n\r\nconst RegisterContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 300px;\r\n    text-align: center;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n`\r\n\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n}\r\n\r\nexport default function RegisterBox() {\r\n    const [formData, setFormData] = useState({ id: '', password: '' });\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); // 폼 기본 제출 동작 방지\r\n        try {\r\n            const response = await axios.post('/register', formData); // URL 수정\r\n            console.log(response.data); // 서버에서 받은 응답 데이터\r\n            // 회원가입 성공 처리 코드 추가\r\n        } catch (error) {\r\n            console.error('회원가입 중 오류가 발생했습니다:', error);\r\n            // 회원가입 실패 처리 코드 추가\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <RegisterContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\" // 비밀번호 타입으로 수정\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">회원가입</button>\r\n            </form>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}