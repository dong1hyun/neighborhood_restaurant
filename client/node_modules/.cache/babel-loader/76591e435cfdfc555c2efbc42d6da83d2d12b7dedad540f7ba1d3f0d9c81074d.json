{"ast":null,"code":"import axios from'axios';import styled from'styled-components';const{kakao}=window;// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\nlet infowindow=new kakao.maps.InfoWindow({zIndex:1});// 키워드 검색을 요청하는 함수입니다\nexport function searchPlaces(inputKeyword){if(!inputKeyword.replace(/^\\s+|\\s+$/g,'')){alert('키워드를 입력해주세요!');return false;}afterSearch(inputKeyword);}function afterSearch(keyword){let markers=[];let mapContainer=document.getElementById('keywordMap'),mapOption={center:new kakao.maps.LatLng(37.566826,126.9786567),level:3};let map=new kakao.maps.Map(mapContainer,mapOption);let ps=new kakao.maps.services.Places();ps.keywordSearch(keyword,placesSearchCB,{category_group_code:'FD6'});function placesSearchCB(data,status,pagination){if(status===kakao.maps.services.Status.OK){// 장소 데이터를 가공한 후 displayPlaces 함수로 전달\nprocessPlaceData(data).then(processedData=>{displayPlaces(processedData);displayPagination(pagination);});}else if(status===kakao.maps.services.Status.ZERO_RESULT){alert('검색 결과가 존재하지 않습니다.');return;}else if(status===kakao.maps.services.Status.ERROR){alert('검색 결과 중 오류가 발생했습니다.');return;}}async function processPlaceData(places){for(let place of places){var _crawlingData$data,_crawlingData$data$ba,_crawlingData$data$ba2,_crawlingData$data$ba3;let crawlingData=await axios.get(\"https://place.map.kakao.com/m/main/v/\".concat(place.id));let img_url=((_crawlingData$data=crawlingData.data)===null||_crawlingData$data===void 0?void 0:(_crawlingData$data$ba=_crawlingData$data.basicInfo)===null||_crawlingData$data$ba===void 0?void 0:_crawlingData$data$ba.mainphotourl)||\"none\";let timeList=\"none\";if((_crawlingData$data$ba2=crawlingData.data.basicInfo)!==null&&_crawlingData$data$ba2!==void 0&&(_crawlingData$data$ba3=_crawlingData$data$ba2.openHour)!==null&&_crawlingData$data$ba3!==void 0&&_crawlingData$data$ba3.periodList){var _crawlingData$data$ba4,_crawlingData$data$ba5,_crawlingData$data$ba6;timeList=JSON.stringify((_crawlingData$data$ba4=crawlingData.data.basicInfo)===null||_crawlingData$data$ba4===void 0?void 0:(_crawlingData$data$ba5=_crawlingData$data$ba4.openHour)===null||_crawlingData$data$ba5===void 0?void 0:(_crawlingData$data$ba6=_crawlingData$data$ba5.periodList[0])===null||_crawlingData$data$ba6===void 0?void 0:_crawlingData$data$ba6.timeList);}place.img_url=img_url;place.timeList=timeList;}return places;}function displayPlaces(places){console.log(places);axios.post(\"http://localhost:3001/restaurant\",places).then(response=>{console.log('Response:',response.data);}).catch(error=>{console.error('Error:',error);});let listEl=document.getElementById('placesList'),fragment=document.createDocumentFragment(),bounds=new kakao.maps.LatLngBounds();places.forEach(place=>{let placePosition=new kakao.maps.LatLng(place.y,place.x);let marker=new kakao.maps.Marker({position:placePosition});marker.setMap(map);bounds.extend(placePosition);let itemEl=document.createElement('li');itemEl.innerHTML=\"\".concat(place.place_name,\" (img: \").concat(place.img_url,\", time: \").concat(place.timeList,\")\");fragment.appendChild(itemEl);});listEl.appendChild(fragment);map.setBounds(bounds);}// 검색결과 항목을 Element로 반환하는 함수입니다\nfunction getListItem(index,places){// console.log(places)\nlet el=document.createElement('li');let itemStr=\"<a href=\\\"/place/\".concat(places.id,\"\\\">\")+'<div><span class=\"markerbg marker_'+(index+1)+'\"></span>'+'<div class=\"info\">'+'   <h5>'+places.place_name+'</h5>';if(places.road_address_name){itemStr+='    <span>'+places.road_address_name+'</span>'+'   <span class=\"jibun gray\">'+places.address_name+'</span>';}else{itemStr+='    <span>'+places.address_name+'</span>';}itemStr+='  <span class=\"tel\">'+places.phone+'</span>'+'</div></div></a>';el.innerHTML=itemStr;el.className='item';el.addEventListener('mouseover ',event=>{event.target.style.scale=1.2;});return el;}// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\nfunction addMarker(position,idx,title){let imageSrc='https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png',// 마커 이미지 url, 스프라이트 이미지를 씁니다\nimageSize=new kakao.maps.Size(36,37),// 마커 이미지의 크기\nimgOptions={spriteSize:new kakao.maps.Size(36,691),// 스프라이트 이미지의 크기\nspriteOrigin:new kakao.maps.Point(0,idx*46+10),// 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\noffset:new kakao.maps.Point(13,37)// 마커 좌표에 일치시킬 이미지 내에서의 좌표\n},markerImage=new kakao.maps.MarkerImage(imageSrc,imageSize,imgOptions),marker=new kakao.maps.Marker({position:position,// 마커의 위치\nimage:markerImage});marker.setMap(map);// 지도 위에 마커를 표출합니다\nmarkers.push(marker);// 배열에 생성된 마커를 추가합니다\nreturn marker;}// 지도 위에 표시되고 있는 마커를 모두 제거합니다\nfunction removeMarker(){for(let i=0;i<markers.length;i++){markers[i].setMap(null);}markers=[];}// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\nfunction displayPagination(pagination){let paginationEl=document.getElementById('pagination'),fragment=document.createDocumentFragment(),i;// 기존에 추가된 페이지번호를 삭제합니다\nwhile(paginationEl!==null&&paginationEl!==void 0&&paginationEl.hasChildNodes()){if(paginationEl.lastChild)paginationEl.removeChild(paginationEl.lastChild);}for(i=1;i<=pagination.last;i++){let el=document.createElement('a');el.href=\"#\";el.innerHTML=''+i;if(i===pagination.current){el.className='on';}else{el.onclick=function(i){return function(){pagination.gotoPage(i);};}(i);}fragment.appendChild(el);}paginationEl===null||paginationEl===void 0?void 0:paginationEl.appendChild(fragment);}// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n// 인포윈도우에 장소명을 표시합니다\nfunction displayInfowindow(marker,title){let content='<div style=\"padding:5px;z-index:1;\">'+title+'</div>';infowindow.setContent(content);infowindow.open(map,marker);}// 검색결과 목록의 자식 Element를 제거하는 함수입니다\nfunction removeAllChildNods(el){while(el.hasChildNodes()){el.removeChild(el.lastChild);}}}","map":{"version":3,"names":["axios","styled","kakao","window","infowindow","maps","InfoWindow","zIndex","searchPlaces","inputKeyword","replace","alert","afterSearch","keyword","markers","mapContainer","document","getElementById","mapOption","center","LatLng","level","map","Map","ps","services","Places","keywordSearch","placesSearchCB","category_group_code","data","status","pagination","Status","OK","processPlaceData","then","processedData","displayPlaces","displayPagination","ZERO_RESULT","ERROR","places","place","_crawlingData$data","_crawlingData$data$ba","_crawlingData$data$ba2","_crawlingData$data$ba3","crawlingData","get","concat","id","img_url","basicInfo","mainphotourl","timeList","openHour","periodList","_crawlingData$data$ba4","_crawlingData$data$ba5","_crawlingData$data$ba6","JSON","stringify","console","log","post","response","catch","error","listEl","fragment","createDocumentFragment","bounds","LatLngBounds","forEach","placePosition","y","x","marker","Marker","position","setMap","extend","itemEl","createElement","innerHTML","place_name","appendChild","setBounds","getListItem","index","el","itemStr","road_address_name","address_name","phone","className","addEventListener","event","target","style","scale","addMarker","idx","title","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","image","push","removeMarker","i","length","paginationEl","hasChildNodes","lastChild","removeChild","last","href","current","onclick","gotoPage","displayInfowindow","content","setContent","open","removeAllChildNods"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/function/keywordSearch.js"],"sourcesContent":["import axios from 'axios';\r\nimport styled from 'styled-components'\r\n\r\nconst { kakao } = window;\r\n\r\n// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\nlet infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n// 키워드 검색을 요청하는 함수입니다\r\nexport function searchPlaces(inputKeyword) {\r\n    if (!inputKeyword.replace(/^\\s+|\\s+$/g, '')) {\r\n        alert('키워드를 입력해주세요!');\r\n        return false;\r\n    }\r\n\r\n    afterSearch(inputKeyword);\r\n}\r\n\r\nfunction afterSearch(keyword) {\r\n    let markers = [];\r\n    let mapContainer = document.getElementById('keywordMap'),\r\n        mapOption = {\r\n            center: new kakao.maps.LatLng(37.566826, 126.9786567),\r\n            level: 3\r\n        };\r\n    let map = new kakao.maps.Map(mapContainer, mapOption);\r\n    let ps = new kakao.maps.services.Places();\r\n\r\n    ps.keywordSearch(keyword, placesSearchCB, { category_group_code: 'FD6' });\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            // 장소 데이터를 가공한 후 displayPlaces 함수로 전달\r\n            processPlaceData(data).then((processedData) => {\r\n                displayPlaces(processedData);\r\n                displayPagination(pagination);\r\n            });\r\n        } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n            alert('검색 결과가 존재하지 않습니다.');\r\n            return;\r\n        } else if (status === kakao.maps.services.Status.ERROR) {\r\n            alert('검색 결과 중 오류가 발생했습니다.');\r\n            return;\r\n        }\r\n    }\r\n\r\n    async function processPlaceData(places) {\r\n        for (let place of places) {\r\n            let crawlingData = await axios.get(`https://place.map.kakao.com/m/main/v/${place.id}`);\r\n            let img_url = crawlingData.data?.basicInfo?.mainphotourl || \"none\";\r\n            let timeList = \"none\";\r\n            if (crawlingData.data.basicInfo?.openHour?.periodList) {\r\n                timeList = JSON.stringify(crawlingData.data.basicInfo?.openHour?.periodList[0]?.timeList);\r\n            }\r\n            place.img_url = img_url;\r\n            place.timeList = timeList;\r\n        }\r\n        return places;\r\n    }\r\n\r\n    function displayPlaces(places) {\r\n        console.log(places);\r\n        axios.post(\"http://localhost:3001/restaurant\", places)\r\n            .then(response => {\r\n                console.log('Response:', response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n\r\n        let listEl = document.getElementById('placesList'),\r\n            fragment = document.createDocumentFragment(),\r\n            bounds = new kakao.maps.LatLngBounds();\r\n\r\n        places.forEach((place) => {\r\n            let placePosition = new kakao.maps.LatLng(place.y, place.x);\r\n            let marker = new kakao.maps.Marker({ position: placePosition });\r\n            marker.setMap(map);\r\n            bounds.extend(placePosition);\r\n\r\n            let itemEl = document.createElement('li');\r\n            itemEl.innerHTML = `${place.place_name} (img: ${place.img_url}, time: ${place.timeList})`;\r\n            fragment.appendChild(itemEl);\r\n        });\r\n        listEl.appendChild(fragment);\r\n        map.setBounds(bounds);\r\n    }\r\n\r\n\r\n    // 검색결과 항목을 Element로 반환하는 함수입니다\r\n    function getListItem(index, places) {\r\n        // console.log(places)\r\n        let el = document.createElement('li')\r\n        let itemStr = `<a href=\"/place/${places.id}\">` + '<div><span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n            '<div class=\"info\">' +\r\n            '   <h5>' + places.place_name + '</h5>';\r\n\r\n        if (places.road_address_name) {\r\n            itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n                '   <span class=\"jibun gray\">' + places.address_name + '</span>';\r\n        } else {\r\n            itemStr += '    <span>' + places.address_name + '</span>';\r\n        }\r\n\r\n        itemStr += '  <span class=\"tel\">' + places.phone + '</span>' +\r\n            '</div></div></a>';\r\n\r\n        el.innerHTML = itemStr;\r\n        el.className = 'item';\r\n        el.addEventListener('mouseover ', (event) => {event.target.style.scale = 1.2})\r\n        return el;\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position, idx, title) {\r\n        let imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n            imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n            imgOptions = {\r\n                spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n                spriteOrigin: new kakao.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n                offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n            },\r\n            markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n            marker = new kakao.maps.Marker({\r\n                position: position, // 마커의 위치\r\n                image: markerImage\r\n            });\r\n\r\n        marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n        markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n\r\n        return marker;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n        for (let i = 0; i < markers.length; i++) {\r\n            markers[i].setMap(null);\r\n        }\r\n        markers = [];\r\n    }\r\n\r\n    // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n    function displayPagination(pagination) {\r\n        let paginationEl = document.getElementById('pagination'),\r\n            fragment = document.createDocumentFragment(),\r\n            i;\r\n\r\n        // 기존에 추가된 페이지번호를 삭제합니다\r\n        while (paginationEl?.hasChildNodes()) {\r\n            if (paginationEl.lastChild) paginationEl.removeChild(paginationEl.lastChild);\r\n        }\r\n\r\n        for (i = 1; i <= pagination.last; i++) {\r\n            let el = document.createElement('a');\r\n            el.href = \"#\";\r\n            el.innerHTML = '' + i;\r\n\r\n            if (i === pagination.current) {\r\n                el.className = 'on';\r\n            } else {\r\n                el.onclick = (function (i) {\r\n                    return function () {\r\n                        pagination.gotoPage(i);\r\n                    }\r\n                })(i);\r\n            }\r\n\r\n            fragment.appendChild(el);\r\n        }\r\n        paginationEl?.appendChild(fragment);\r\n    }\r\n\r\n    // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n    // 인포윈도우에 장소명을 표시합니다\r\n    function displayInfowindow(marker, title) {\r\n        let content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n\r\n        infowindow.setContent(content);\r\n        infowindow.open(map, marker);\r\n    }\r\n\r\n    // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n    function removeAllChildNods(el) {\r\n        while (el.hasChildNodes()) {\r\n            el.removeChild(el.lastChild);\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}