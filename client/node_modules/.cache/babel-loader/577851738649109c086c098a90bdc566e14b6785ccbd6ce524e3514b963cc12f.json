{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from'react';import{motion}from\"framer-motion\";import styled from\"styled-components\";import axios from'axios';// axios import 추가\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RegisterContainer=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    z-index: 1;\\n    top: 300px;\\n    text-align: center;\\n    background-color: whitesmoke;\\n    width: 400px;\\n    height: 200px;\\n    background-color: rgba(255, 255, 255, 1);\\n    border-radius: 40px;\\n    position: absolute;\\n    top: 200px;\\n    left: 0px;\\n    right: 0px;\\n    margin: 0 auto;\\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\\n\"])));const boxVariants={initial:{opacity:0,scale:0},visible:{opacity:1,scale:1},leaving:{opacity:0,scale:0}};export default function RegisterBox(){//formData는 현재의 입력 폼 데이터를 저장하는 변수이고, setFormData는 이 데이터를 업데이트하는 함수, useState초기값 + 타입\nconst[formData,setFormData]=useState({name:'',id:'',password:''});const handleSubmit=async e=>{e.preventDefault();// 폼 기본 제출 동작 방지, 폼이 제출 될 때마다, 새로고침되는 기본적인 이벤트를 취소하는 코드\ntry{const response=await axios.post('/register',{name:formData.name,id:formData.id,password:formData.password});console.log('Response:',response.data);// 회원가입 성공 처리 코드 추가\n}catch(error){console.error('회원가입 중 오류가 발생했습니다:',error);// 회원가입 실패 처리 코드 추가\n}};// (e: ChangeEvent<HTMLInputElement>) 여기서 input에 발생한 이벤트 값을 'e'객체에 넣어줌.\nconst handleChange=e=>{// ...formData는 기존의 객체 복사 및 업데이트하여 새로운 객체 생성. e.target.name -> input 'name' 속성. 그리고 해당 name의 입력 된 값 -> e.target.value\nsetFormData({...formData,[e.target.name]:e.target.value});};// JSX를 반환합니다.\n// onSubmit은 폼이 제출될 때, 호출되는 함수를 지정\n// onChange는 입력값이 변경 될 때마다, 호출되는 함수 지정\nreturn/*#__PURE__*/_jsx(RegisterContainer,{variants:boxVariants,initial:\"initial\",animate:\"visible\",exit:\"leaving\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC774\\uB984:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC544\\uC774\\uB514:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:formData.id,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uBE44\\uBC00\\uBC88\\uD638:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})});}","map":{"version":3,"names":["React","useState","motion","styled","axios","jsx","_jsx","jsxs","_jsxs","RegisterContainer","div","_templateObject","_taggedTemplateLiteral","boxVariants","initial","opacity","scale","visible","leaving","RegisterBox","formData","setFormData","name","id","password","handleSubmit","e","preventDefault","response","post","console","log","data","error","handleChange","target","value","variants","animate","exit","children","onSubmit","type","onChange"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/RegisterBox.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\nimport axios from 'axios'; // axios import 추가\r\n\r\nconst RegisterContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 300px;\r\n    text-align: center;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n`\r\n\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n}\r\n\r\nexport default function RegisterBox() {\r\n    //formData는 현재의 입력 폼 데이터를 저장하는 변수이고, setFormData는 이 데이터를 업데이트하는 함수, useState초기값 + 타입\r\n    const [formData, setFormData] = useState({ name: '', id: '', password: '' });\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); // 폼 기본 제출 동작 방지, 폼이 제출 될 때마다, 새로고침되는 기본적인 이벤트를 취소하는 코드\r\n\r\n        try {\r\n            const response = await axios.post('/register', {\r\n                name: formData.name,\r\n                id: formData.id,\r\n                password: formData.password\r\n            });\r\n            console.log('Response:', response.data);\r\n            // 회원가입 성공 처리 코드 추가\r\n        } catch (error) {\r\n            console.error('회원가입 중 오류가 발생했습니다:', error);\r\n            // 회원가입 실패 처리 코드 추가\r\n        }\r\n    };\r\n\r\n    // (e: ChangeEvent<HTMLInputElement>) 여기서 input에 발생한 이벤트 값을 'e'객체에 넣어줌.\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // ...formData는 기존의 객체 복사 및 업데이트하여 새로운 객체 생성. e.target.name -> input 'name' 속성. 그리고 해당 name의 입력 된 값 -> e.target.value\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // JSX를 반환합니다.\r\n    // onSubmit은 폼이 제출될 때, 호출되는 함수를 지정\r\n    // onChange는 입력값이 변경 될 때마다, 호출되는 함수 지정\r\n    return (\r\n        <RegisterContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    이름:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">회원가입</button>\r\n            </form>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}