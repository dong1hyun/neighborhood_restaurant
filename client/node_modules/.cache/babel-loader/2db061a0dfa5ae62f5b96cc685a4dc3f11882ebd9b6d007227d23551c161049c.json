{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\neighborhood_restaurant\\\\client\\\\src\\\\components\\\\RegisterBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport axios from 'axios'; // axios import 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterContainer = styled(motion.div)`\n    position: absolute;\n    z-index: 1;\n    top: 300px;\n    text-align: center;\n    background-color: whitesmoke;\n    width: 400px;\n    height: 200px;\n    background-color: rgba(255, 255, 255, 1);\n    border-radius: 40px;\n    position: absolute;\n    top: 200px;\n    left: 0px;\n    right: 0px;\n    margin: 0 auto;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n`;\n_c = RegisterContainer;\nconst boxVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0\n  },\n  visible: {\n    opacity: 1,\n    scale: 1\n  },\n  leaving: {\n    opacity: 0,\n    scale: 0\n  }\n};\nexport default function RegisterBox() {\n  _s();\n  //formData는 현재의 입력 폼 데이터를 저장하는 변수이고, setFormData는 이 데이터를 업데이트하는 함수, useState초기값 + 타입\n  const [formData, setFormData] = useState({\n    name: '',\n    id: '',\n    password: ''\n  });\n  const handleSubmit = async e => {\n    e.preventDefault(); // 폼 기본 제출 동작 방지, 폼이 제출 될 때마다, 새로고침되는 기본적인 이벤트를 취소하는 코드\n\n    try {\n      const response = await axios.post('/register', {\n        name: formData.name,\n        id: formData.id,\n        password: formData.password\n      });\n      console.log('Response:', response.data);\n      // 회원가입 성공 처리 코드 추가\n    } catch (error) {\n      console.error('회원가입 중 오류가 발생했습니다:', error);\n      // 회원가입 실패 처리 코드 추가\n    }\n  };\n\n  // (e: ChangeEvent<HTMLInputElement>) 여기서 input에 발생한 이벤트 값을 'e'객체에 넣어줌.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // ...formData는 기존의 객체 복사 및 업데이트하여 새로운 객체 생성.\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // JSX를 반환합니다.\n  // onSubmit은 폼이 제출될 때, 호출되는 함수를 지정\n  // onChange는 입력값이 변경 될 때마다, 호출되는 함수 지정\n  return /*#__PURE__*/_jsxDEV(RegisterContainer, {\n    variants: boxVariants,\n    initial: \"initial\",\n    animate: \"visible\",\n    exit: \"leaving\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC774\\uB984:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC544\\uC774\\uB514:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"id\",\n          value: formData.id,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterBox, \"Oj27WD5fZwchxYZcWfx4h3X1zTo=\");\n_c2 = RegisterBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterContainer\");\n$RefreshReg$(_c2, \"RegisterBox\");","map":{"version":3,"names":["React","useState","motion","styled","axios","jsxDEV","_jsxDEV","RegisterContainer","div","_c","boxVariants","initial","opacity","scale","visible","leaving","RegisterBox","_s","formData","setFormData","name","id","password","handleSubmit","e","preventDefault","response","post","console","log","data","error","handleChange","value","target","prevState","variants","animate","exit","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/RegisterBox.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\nimport axios from 'axios'; // axios import 추가\r\n\r\nconst RegisterContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 300px;\r\n    text-align: center;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n`\r\n\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n}\r\n\r\nexport default function RegisterBox() {\r\n    //formData는 현재의 입력 폼 데이터를 저장하는 변수이고, setFormData는 이 데이터를 업데이트하는 함수, useState초기값 + 타입\r\n    const [formData, setFormData] = useState({ name: '', id: '', password: '' });\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault(); // 폼 기본 제출 동작 방지, 폼이 제출 될 때마다, 새로고침되는 기본적인 이벤트를 취소하는 코드\r\n\r\n        try {\r\n            const response = await axios.post('/register', {\r\n                name: formData.name,\r\n                id: formData.id,\r\n                password: formData.password\r\n            });\r\n            console.log('Response:', response.data);\r\n            // 회원가입 성공 처리 코드 추가\r\n        } catch (error) {\r\n            console.error('회원가입 중 오류가 발생했습니다:', error);\r\n            // 회원가입 실패 처리 코드 추가\r\n        }\r\n    };\r\n\r\n    // (e: ChangeEvent<HTMLInputElement>) 여기서 input에 발생한 이벤트 값을 'e'객체에 넣어줌.\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = e.target;\r\n        // ...formData는 기존의 객체 복사 및 업데이트하여 새로운 객체 생성.\r\n        setFormData(prevState => ({...prevState,[name]: value}));\r\n    };\r\n\r\n    // JSX를 반환합니다.\r\n    // onSubmit은 폼이 제출될 때, 호출되는 함수를 지정\r\n    // onChange는 입력값이 변경 될 때마다, 호출되는 함수 지정\r\n    return (\r\n        <RegisterContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    이름:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">회원가입</button>\r\n            </form>\r\n        </RegisterContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}