{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;import axios from\"axios\";import{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import styled from\"styled-components\";import setMarker from\"../function/locationMarker\";import{IoLocationSharp}from\"react-icons/io5\";import{SiAuth0}from\"react-icons/si\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    margin-top: 200px;\\n    gap: 20px;\\n    @media screen and (max-width: 700px) {\\n        flex-direction: column;\\n        margin-top: 80px;\\n    }\\n\"])));const Map=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    width: 60%;\\n    height: 400px;\\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\\n    border-radius: 20px;\\n    @media screen and (max-width: 700px) {\\n        height: 250px;\\n        width: 80%;\\n    }\\n\"])));const LocationContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    position: relative;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 60px;\\n    border-radius: 10px;\\n    width: 30%;\\n    height: 400px;\\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\\n    text-align: center;\\n    overflow: hidden;\\n    &::before {\\n        content: \\\"\\\";\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        width: 100%;\\n        height: 100%;\\n        background-image: url(\\\"/home/neighbor.jpg\\\");\\n        background-size: cover;\\n        background-position: center;\\n        opacity: 0.5; /* \\uBC30\\uACBD \\uC774\\uBBF8\\uC9C0\\uC758 \\uD22C\\uBA85\\uB3C4 \\uC124\\uC815 */\\n        z-index: -1; /* \\uB0B4\\uC6A9\\uBB3C \\uB4A4\\uC5D0 \\uBC30\\uACBD\\uC744 \\uBC30\\uCE58 */\\n    }\\n    @media screen and (max-width: 700px) {\\n        width: 80%;\\n        height: 300px;\\n        gap: 40px;\\n}\\n\"])));const Info=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    color: black;\\n    margin-top: 40px;\\n    width: 90%;\\n    padding: 10px;\\n    border-radius: 10px;\\n    font-family: \\\"Noto Serif KR\\\", serif;\\n    font-optical-sizing: auto;\\n    font-style: normal;\\n    font-weight: bold;\\n    font-size: 20px;\\n\"])));const GetLocationButton=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    background-color: #323232;\\n    color: white;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n\"])));const SetLocationButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    background-color: #4e4ed7;\\n    color: white;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n\"])));const LocationForm=styled.form(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n\"])));const LocationInput=styled.input(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n    width: 250px;\\n    height: 30px;\\n    border-radius: 5px;\\n    border: none;\\n    margin-right: 10px;\\n    margin-bottom: 10px;\\n    padding-left: 10px;\\n    background-color: #4f4f4f;\\n    color: white;\\n    @media screen and (max-width: 700px){\\n        width: 80%;\\n    }\\n\"])));export default function LocaionSet(){const[searchResult,setSearchResult]=useState('');const[userLocation,setUserLocation]=useState(null);const[userAddress,setUserAddress]=useState('');const[searchTerm,setSearchTerm]=useState('');const[sessionID,setSessionID]=useState('');const{register,handleSubmit}=useForm();const navigate=useNavigate();// 카카오API에서 주소 검색 \nconst handleSearch=async _ref=>{let{location}=_ref;try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/search/keyword.json?query=\".concat(location),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const{address_name}=response.data.documents[0];setSearchResult(address_name);if(isAddressMatch(address_name,userAddress)){console.log('검색된 위치와 사용자 위치가 동일합니다.');// 여기서 서버로 값을 보내는 작업 수행\nsendLocationToServer(sessionID,address_name);}else{console.log('검색된 위치와 사용자 위치가 동일하지 않습니다.');}}else{console.error('검색 결과를 찾을 수 없습니다.',response.data);}}catch(error){console.error('검색 중 오류가 발생했습니다:',error);}};// 위도와 경도를 이용해 카카오 로컬 API를 통해 해당 좌표의 주소를 가져옵니다\nconst getAddressFromCoordinates=async(latitude,longitude)=>{try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/geo/coord2address.json?x=\".concat(longitude,\"&y=\").concat(latitude),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const address=response.data.documents[0].address.address_name;return address;}else{console.error('주소를 찾을 수 없습니다.');return null;}}catch(error){console.error('주소를 가져오는 중 오류가 발생했습니다:',error);return null;}};//사용자의 현재 위치를 가져오는 기능 + 자신의 위도/경도 getAddressFromCoordinates로 보내서 주소로 변경\nconst handleGetUserLocation=()=>{navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;setUserLocation({x:longitude,y:latitude});const address=await getAddressFromCoordinates(latitude,longitude);if(address){setUserAddress(address);console.log('사용자의 위치:',address);}});};//주소 자르고 비교 \nconst isAddressMatch=(address1,address2)=>{const regex=/(.+?(읍|면|동))/;const match1=address1.match(regex);const match2=address2.match(regex);return!!match1&&!!match2&&match1[1]===match2[1];};//특정 세션 ID(sessionID)와 주소(address)를 서버로 전송\nconst sendLocationToServer=async(sessionID,address)=>{try{// 주소에서 숫자를 제거합니다.\nconst cleanedAddress=address.replace(/\\d+/g,'').trim().replace(/-$/,'');const response=await axios.post('/location',{sessionID,address:cleanedAddress});console.log('서버 응답:',response.data);}catch(error){console.error('서버로 위치 전송 중 오류가 발생했습니다:',error);}};useEffect(()=>{const loggedInSessionID=sessionStorage.getItem('sessionID')+'';if(!loggedInSessionID){alert(\"로그인이 필요한 서비스 입니다.\");navigate(\"/logIn\");}setSessionID(loggedInSessionID);setMarker(37.56683320853823,126.97862961813682);},[]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Map,{id:\"locationMap\"}),/*#__PURE__*/_jsxs(LocationContainer,{children:[/*#__PURE__*/_jsx(Info,{children:\"\\uC704\\uCE58\\uB97C \\uAC00\\uC838\\uC624\\uACE0 \\uB3D9\\uB124\\uB97C \\uC785\\uB825\\uD558\\uBA74 \\uB3D9\\uB124\\uC778\\uC99D\\uC774 \\uC644\\uB8CC\\uB429\\uB2C8\\uB2E4!\"}),/*#__PURE__*/_jsxs(GetLocationButton,{onClick:handleGetUserLocation,children:[/*#__PURE__*/_jsx(IoLocationSharp,{size:20,color:\"rgba(15, 188, 249,1.0)\"}),\" \\uB0B4 \\uC704\\uCE58 \\uAC00\\uC838\\uC624\\uAE30\"]}),/*#__PURE__*/_jsxs(LocationForm,{onSubmit:handleSubmit(handleSearch),children:[/*#__PURE__*/_jsx(LocationInput,{placeholder:\"\\uB3D9\\uB124 \\uC785\\uB825\",value:searchTerm// searchTerm 값으로 입력란의 값 설정\n,onChange:e=>setSearchTerm(e.target.value)// 입력값 변경 시 searchTerm 업데이트\n}),/*#__PURE__*/_jsxs(SetLocationButton,{type:\"submit\",children:[/*#__PURE__*/_jsx(SiAuth0,{}),\" \\uC778\\uC99D\\uD558\\uAE30\"]})]})]})]});}","map":{"version":3,"names":["axios","useEffect","useState","useForm","styled","setMarker","IoLocationSharp","SiAuth0","useNavigate","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Map","_templateObject2","LocationContainer","_templateObject3","Info","_templateObject4","GetLocationButton","button","_templateObject5","SetLocationButton","_templateObject6","LocationForm","form","_templateObject7","LocationInput","input","_templateObject8","LocaionSet","searchResult","setSearchResult","userLocation","setUserLocation","userAddress","setUserAddress","searchTerm","setSearchTerm","sessionID","setSessionID","register","handleSubmit","navigate","handleSearch","_ref","location","response","get","concat","headers","Authorization","data","documents","length","address_name","isAddressMatch","console","log","sendLocationToServer","error","getAddressFromCoordinates","latitude","longitude","address","handleGetUserLocation","navigator","geolocation","getCurrentPosition","position","coords","x","y","address1","address2","regex","match1","match","match2","cleanedAddress","replace","trim","post","loggedInSessionID","sessionStorage","getItem","alert","children","id","onClick","size","color","onSubmit","placeholder","value","onChange","e","target","type"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/page/LocationSet.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport setMarker from \"../function/locationMarker\";\r\nimport { IoLocationSharp } from \"react-icons/io5\";\r\nimport { SiAuth0 } from \"react-icons/si\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 200px;\r\n    gap: 20px;\r\n    @media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        margin-top: 80px;\r\n    }\r\n`\r\n\r\nconst Map = styled.div`\r\n    width: 60%;\r\n    height: 400px;\r\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    border-radius: 20px;\r\n    @media screen and (max-width: 700px) {\r\n        height: 250px;\r\n        width: 80%;\r\n    }\r\n`\r\n\r\nconst LocationContainer = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 60px;\r\n    border-radius: 10px;\r\n    width: 30%;\r\n    height: 400px;\r\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    text-align: center;\r\n    overflow: hidden;\r\n    &::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-image: url(\"/home/neighbor.jpg\");\r\n        background-size: cover;\r\n        background-position: center;\r\n        opacity: 0.5; /* 배경 이미지의 투명도 설정 */\r\n        z-index: -1; /* 내용물 뒤에 배경을 배치 */\r\n    }\r\n    @media screen and (max-width: 700px) {\r\n        width: 80%;\r\n        height: 300px;\r\n        gap: 40px;\r\n}\r\n`;\r\n\r\nconst Info = styled.div`\r\n    color: black;\r\n    margin-top: 40px;\r\n    width: 90%;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n    font-family: \"Noto Serif KR\", serif;\r\n    font-optical-sizing: auto;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n`\r\n\r\nconst GetLocationButton = styled.button`\r\n    background-color: #323232;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SetLocationButton = styled.button`\r\n    background-color: #4e4ed7;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LocationForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst LocationInput = styled.input`\r\n    width: 250px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding-left: 10px;\r\n    background-color: #4f4f4f;\r\n    color: white;\r\n    @media screen and (max-width: 700px){\r\n        width: 80%;\r\n    }\r\n`;\r\n\r\ninterface searchForm {\r\n    location: string\r\n}\r\n\r\nexport default function LocaionSet() {\r\n    const [searchResult, setSearchResult] = useState<string>('');\r\n    const [userLocation, setUserLocation] = useState<{ x: number, y: number } | null>(null);\r\n    const [userAddress, setUserAddress] = useState<string>('');\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n    const [sessionID, setSessionID] = useState<string>('');\r\n    const { register, handleSubmit } = useForm<searchForm>();\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // 카카오API에서 주소 검색 \r\n    const handleSearch = async ({ location }: searchForm) => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/search/keyword.json?query=${location}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const { address_name } = response.data.documents[0];\r\n                setSearchResult(address_name);\r\n                if (isAddressMatch(address_name, userAddress)) {\r\n                    console.log('검색된 위치와 사용자 위치가 동일합니다.');\r\n                    // 여기서 서버로 값을 보내는 작업 수행\r\n                    sendLocationToServer(sessionID, address_name);\r\n                } else {\r\n                    console.log('검색된 위치와 사용자 위치가 동일하지 않습니다.');\r\n                }\r\n            } else {\r\n                console.error('검색 결과를 찾을 수 없습니다.', response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('검색 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    // 위도와 경도를 이용해 카카오 로컬 API를 통해 해당 좌표의 주소를 가져옵니다\r\n    const getAddressFromCoordinates = async (latitude: number, longitude: number) => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${longitude}&y=${latitude}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const address = response.data.documents[0].address.address_name;\r\n                return address;\r\n            } else {\r\n                console.error('주소를 찾을 수 없습니다.');\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            console.error('주소를 가져오는 중 오류가 발생했습니다:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    //사용자의 현재 위치를 가져오는 기능 + 자신의 위도/경도 getAddressFromCoordinates로 보내서 주소로 변경\r\n    const handleGetUserLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(async (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setUserLocation({ x: longitude, y: latitude });\r\n            const address = await getAddressFromCoordinates(latitude, longitude);\r\n            if (address) {\r\n                setUserAddress(address);\r\n                console.log('사용자의 위치:', address);\r\n            }\r\n        });\r\n    };\r\n\r\n    //주소 자르고 비교 \r\n    const isAddressMatch = (address1: string, address2: string): boolean => {\r\n        const regex = /(.+?(읍|면|동))/;\r\n        const match1 = address1.match(regex);\r\n        const match2 = address2.match(regex);\r\n        return !!match1 && !!match2 && match1[1] === match2[1];\r\n    };\r\n\r\n\r\n    //특정 세션 ID(sessionID)와 주소(address)를 서버로 전송\r\n    const sendLocationToServer = async (sessionID: string, address: string) => {\r\n        try {\r\n            // 주소에서 숫자를 제거합니다.\r\n            const cleanedAddress = address.replace(/\\d+/g, '').trim().replace(/-$/, '');\r\n            const response = await axios.post('/location', { sessionID, address: cleanedAddress });\r\n            console.log('서버 응답:', response.data);\r\n        } catch (error) {\r\n            console.error('서버로 위치 전송 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID') + '';\r\n        if (!loggedInSessionID) {\r\n            alert(\"로그인이 필요한 서비스 입니다.\");\r\n            navigate(\"/logIn\")\r\n        }\r\n        setSessionID(loggedInSessionID);\r\n        setMarker(37.56683320853823, 126.97862961813682);\r\n    }, []);\r\n    return (\r\n        <Container>\r\n            <Map id=\"locationMap\" />\r\n            <LocationContainer>\r\n                <Info>위치를 가져오고 동네를 입력하면 동네인증이 완료됩니다!</Info>\r\n                <GetLocationButton onClick={handleGetUserLocation}><IoLocationSharp size={20} color=\"rgba(15, 188, 249,1.0)\" /> 내 위치 가져오기</GetLocationButton>\r\n                <LocationForm onSubmit={handleSubmit(handleSearch)}>\r\n                    <LocationInput\r\n                        placeholder=\"동네 입력\"\r\n                        value={searchTerm} // searchTerm 값으로 입력란의 값 설정\r\n                        onChange={(e) => setSearchTerm(e.target.value)} // 입력값 변경 시 searchTerm 업데이트\r\n                    />\r\n                    <SetLocationButton type=\"submit\"><SiAuth0 /> 인증하기</SetLocationButton>\r\n                </LocationForm>\r\n            </LocationContainer>\r\n        </Container>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}