{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\neighborhood_restaurant\\\\client\\\\src\\\\components\\\\Header.tsx\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\"\n// import styled from \"styled-components\"\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\n// import axios from \"axios\";\n// import { AnimatePresence, motion } from \"framer-motion\"\n\n// const Nav = styled.div`\n//     display: flex;\n//     justify-content: space-between;\n//     background-color: black;\n//     height: 100px;\n//     width: 100%;\n//     @media screen and (max-width: 700px) {\n//         flex-direction: column;\n//         align-items: flex-start;\n//         height: 250px;\n// }\n// `\n\n// const Logo = styled(motion.div)`\n//     text-decoration: none;\n//     color: white;\n//     margin-left: 30px;\n//     margin-top:33px;\n//     margin-bottom: 10px;\n//     cursor: pointer;\n//     font-size: 40px;\n//     font-family: \"Black Han Sans\", sans-serif;\n//     font-weight: 400;\n//     font-style: normal;\n// `\n\n// // const SearchContainer = styled.div`\n// //     position: relative;\n// //     background-color: whitesmoke;\n// //     width: 400px;\n// //     height: 50px;\n// //     margin: 25px;\n// //     border-radius: 10px;\n// // `\n\n// const Search = styled.form`\n//     position: relative;\n//     background-color: whitesmoke;\n//     width: 400px;\n//     height: 50px;\n//     margin: 25px;\n//     border-radius: 10px;\n// `\n\n// const SearchInput = styled.input`\n//     position: absolute;\n//     left: 35px;\n//     top: 10px;\n//     width: 300px;\n//     height: 30px;\n//     font-size: 20px;\n//     border-radius: 10px;\n//     border-width: 0;\n//     background-color: whitesmoke;\n//     border-width: 0px;\n//     outline: none;\n// `\n\n// const SearchBtn = styled.button`\n//     position: absolute;\n//     background-color: transparent;\n//     border-width: 0px;\n//     top: 15px;\n//     right: 10px;\n//     width: 50px;\n// `\n\n// const DeleteBtn = styled(motion.button)`\n//     position: absolute;\n//     top: 13px;\n//     left: 5px;\n//     margin-right: 100yypx;\n//     background-color: transparent;\n//     border-radius: 5px;\n//     background-color: #d8d8d8;\n//     border-width: 0px;\n//     hover: {scale: 1.2}\n// `\n\n// const LoginContainer = styled.div`\n//     margin: 20px;\n// `\n\n// const Login = styled(motion.div)`\n//     color: white;\n//     margin: 10px;\n//     cursor: pointer;\n// `\n\n// interface DataForm {\n//     search: string\n// }\n\n// export default function Header() {\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\n//     const navigate = useNavigate();\n//     const setSearchWord = useSetRecoilState(keyword);\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\n//     const onValid = ({ search }: DataForm) => {\n//         setSearchWord(search);\n//         // console.log(\"header:\", search)\n//         navigate(`/search?keyword=${search}`);\n//     }\n//     const searchTypeClick = async () => {\n//         setIsNeighborhood((cur) => !cur)\n//     }\n//     const setRegisterShowing = useSetRecoilState(register_showing);\n//     const onRegisterClick = () => {\n//         setRegisterShowing((cur) => !cur);\n//     }\n//     return (\n//         <>\n//             <Nav>\n//             <Logo\n//                 transition={{ type: \"spring\", damping: 10 }}\n//                 initial={{ scale: 0 }}\n//                 animate={{ scale: 1 }}\n//                 whileHover={{ scale: 1.2 }}\n//                 onClick={() => navigate(\"/\")}>\n//                     동네맛집\n//                 </Logo>\n//                 <Search onSubmit={handleSubmit(onValid)}>\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\n//                     <SearchInput {...register(\"search\", { required: true })} />\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//                     </svg></SearchBtn>\n//                 </Search>\n//                 <LoginContainer>\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\n//                 </LoginContainer>\n//             </Nav>  \n//         </>\n//     )\n// }\n\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { keyword, neighborhood_search, register_showing } from \"../atom\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nav = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\n    background-color: black;\n    height: 100px;\n    width: 100%;\n    @media screen and (max-width: 700px) {\n        flex-direction: column;\n        align-items: flex-start;\n        height: 250px;\n    }\n`;\n_c = Nav;\nconst Logo = styled(motion.div)`\n    text-decoration: none;\n    color: white;\n    margin-left: 30px;\n    cursor: pointer;\n    font-size: 40px;\n    font-family: \"Black Han Sans\", sans-serif;\n    font-weight: 400;\n    font-style: normal;\n`;\n_c2 = Logo;\nconst Search = styled.form`\n    position: relative;\n    background-color: whitesmoke;\n    width: 400px;\n    height: 50px;\n    margin: 25px;\n    border-radius: 10px;\n`;\n_c3 = Search;\nconst SearchInput = styled.input`\n    position: absolute;\n    left: 35px;\n    top: 10px;\n    width: 300px;\n    height: 30px;\n    font-size: 20px;\n    border-radius: 10px;\n    border-width: 0;\n    background-color: whitesmoke;\n    border-width: 0px;\n    outline: none;\n`;\n_c4 = SearchInput;\nconst SearchBtn = styled.button`\n    position: absolute;\n    background-color: transparent;\n    border-width: 0px;\n    top: 15px;\n    right: 10px;\n    width: 50px;\n`;\n_c5 = SearchBtn;\nconst DeleteBtn = styled(motion.button)`\n    position: absolute;\n    top: 13px;\n    left: 5px;\n    background-color: transparent;\n    border-radius: 5px;\n    background-color: #d8d8d8;\n    border-width: 0px;\n    hover: {scale: 1.2}\n`;\n_c6 = DeleteBtn;\nconst LoginContainer = styled.div`\n    display: flex;\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\n    margin: 20px;\n`;\n_c7 = LoginContainer;\nconst Login = styled(motion.div)`\n    color: white;\n    margin: 10px;\n    cursor: pointer;\n`;\n_c8 = Login;\nconst UserInfo = styled.div`\n    color: white;\n    margin-right: 20px;\n`;\n_c9 = UserInfo;\nexport default function Header() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    watch\n  } = useForm();\n  const navigate = useNavigate();\n  const setSearchWord = useSetRecoilState(keyword);\n  const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 추가: 로그인 상태 관리\n  const [username, setUsername] = useState(''); // 추가: 사용자 이름 상태\n\n  const onValid = ({\n    search\n  }) => {\n    setSearchWord(search);\n    navigate(`/search?keyword=${search}`);\n  };\n  const searchTypeClick = async () => {\n    setIsNeighborhood(cur => !cur);\n  };\n  const setRegisterShowing = useSetRecoilState(register_showing);\n  const onRegisterClick = () => {\n    setRegisterShowing(cur => !cur);\n  };\n  useEffect(() => {\n    // 추가: 페이지 로드시 로그인 상태 확인\n    // 예시로 localStorage에 로그인 정보를 저장했다고 가정합니다.\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    if (isLoggedIn === 'true') {\n      setIsLoggedIn(true);\n      const savedUsername = localStorage.getItem('username');\n      if (savedUsername) {\n        setUsername(savedUsername);\n      }\n    }\n  }, []);\n  const handleLogout = () => {\n    // 추가: 로그아웃 처리\n    setIsLoggedIn(false);\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('username');\n    // 기타 로그아웃 관련 처리 (예: 서버로 로그아웃 요청 등)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        transition: {\n          type: \"spring\",\n          damping: 10\n        },\n        initial: {\n          scale: 0\n        },\n        animate: {\n          scale: 1\n        },\n        whileHover: {\n          scale: 1.2\n        },\n        onClick: () => navigate(\"/\"),\n        children: \"\\uB3D9\\uB124\\uB9DB\\uC9D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSubmit: handleSubmit(onValid),\n        children: [watch(\"search\") ? /*#__PURE__*/_jsxDEV(DeleteBtn, {\n          className: \"btn-close\",\n          \"aria-label\": \"Close\",\n          type: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(SearchInput, {\n          ...register(\"search\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchBtn, {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"25\",\n            height: \"25\",\n            fill: \"currentColor\",\n            className: \"bi bi-search\",\n            viewBox: \"0 0 16 16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginContainer, {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(UserInfo, {\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Login, {\n            onClick: handleLogout,\n            children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Login, {\n            onClick: () => navigate(\"/register\"),\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Login, {\n            onClick: () => navigate(\"/login\"),\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Header, \"MZvEJ1qP0syTNRkt3PN6CfRJlB0=\", false, function () {\n  return [useForm, useNavigate, useSetRecoilState, useRecoilState, useSetRecoilState];\n});\n_c10 = Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Search\");\n$RefreshReg$(_c4, \"SearchInput\");\n$RefreshReg$(_c5, \"SearchBtn\");\n$RefreshReg$(_c6, \"DeleteBtn\");\n$RefreshReg$(_c7, \"LoginContainer\");\n$RefreshReg$(_c8, \"Login\");\n$RefreshReg$(_c9, \"UserInfo\");\n$RefreshReg$(_c10, \"Header\");","map":{"version":3,"names":["useForm","styled","useNavigate","useRecoilState","useSetRecoilState","keyword","neighborhood_search","register_showing","motion","jsxDEV","_jsxDEV","Fragment","_Fragment","Nav","div","_c","Logo","_c2","Search","form","_c3","SearchInput","input","_c4","SearchBtn","button","_c5","DeleteBtn","_c6","LoginContainer","_c7","Login","_c8","UserInfo","_c9","Header","_s","register","handleSubmit","getValues","watch","navigate","setSearchWord","isNeighborhood","setIsNeighborhood","isLoggedIn","setIsLoggedIn","useState","username","setUsername","onValid","search","searchTypeClick","cur","setRegisterShowing","onRegisterClick","useEffect","localStorage","getItem","savedUsername","handleLogout","removeItem","children","transition","type","damping","initial","scale","animate","whileHover","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","required","xmlns","width","height","fill","viewBox","d","_c10","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/Header.tsx"],"sourcesContent":["// import { useForm } from \"react-hook-form\"\r\n// import styled from \"styled-components\"\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\r\n// import axios from \"axios\";\r\n// import { AnimatePresence, motion } from \"framer-motion\"\r\n\r\n\r\n// const Nav = styled.div`\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     background-color: black;\r\n//     height: 100px;\r\n//     width: 100%;\r\n//     @media screen and (max-width: 700px) {\r\n//         flex-direction: column;\r\n//         align-items: flex-start;\r\n//         height: 250px;\r\n// }\r\n// `\r\n\r\n// const Logo = styled(motion.div)`\r\n//     text-decoration: none;\r\n//     color: white;\r\n//     margin-left: 30px;\r\n//     margin-top:33px;\r\n//     margin-bottom: 10px;\r\n//     cursor: pointer;\r\n//     font-size: 40px;\r\n//     font-family: \"Black Han Sans\", sans-serif;\r\n//     font-weight: 400;\r\n//     font-style: normal;\r\n// `\r\n\r\n// // const SearchContainer = styled.div`\r\n// //     position: relative;\r\n// //     background-color: whitesmoke;\r\n// //     width: 400px;\r\n// //     height: 50px;\r\n// //     margin: 25px;\r\n// //     border-radius: 10px;\r\n// // `\r\n\r\n// const Search = styled.form`\r\n//     position: relative;\r\n//     background-color: whitesmoke;\r\n//     width: 400px;\r\n//     height: 50px;\r\n//     margin: 25px;\r\n//     border-radius: 10px;\r\n// `\r\n\r\n// const SearchInput = styled.input`\r\n//     position: absolute;\r\n//     left: 35px;\r\n//     top: 10px;\r\n//     width: 300px;\r\n//     height: 30px;\r\n//     font-size: 20px;\r\n//     border-radius: 10px;\r\n//     border-width: 0;\r\n//     background-color: whitesmoke;\r\n//     border-width: 0px;\r\n//     outline: none;\r\n// `\r\n\r\n// const SearchBtn = styled.button`\r\n//     position: absolute;\r\n//     background-color: transparent;\r\n//     border-width: 0px;\r\n//     top: 15px;\r\n//     right: 10px;\r\n//     width: 50px;\r\n// `\r\n\r\n// const DeleteBtn = styled(motion.button)`\r\n//     position: absolute;\r\n//     top: 13px;\r\n//     left: 5px;\r\n//     margin-right: 100yypx;\r\n//     background-color: transparent;\r\n//     border-radius: 5px;\r\n//     background-color: #d8d8d8;\r\n//     border-width: 0px;\r\n//     hover: {scale: 1.2}\r\n// `\r\n\r\n// const LoginContainer = styled.div`\r\n//     margin: 20px;\r\n// `\r\n\r\n// const Login = styled(motion.div)`\r\n//     color: white;\r\n//     margin: 10px;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// interface DataForm {\r\n//     search: string\r\n// }\r\n\r\n// export default function Header() {\r\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n//     const navigate = useNavigate();\r\n//     const setSearchWord = useSetRecoilState(keyword);\r\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n//     const onValid = ({ search }: DataForm) => {\r\n//         setSearchWord(search);\r\n//         // console.log(\"header:\", search)\r\n//         navigate(`/search?keyword=${search}`);\r\n//     }\r\n//     const searchTypeClick = async () => {\r\n//         setIsNeighborhood((cur) => !cur)\r\n//     }\r\n//     const setRegisterShowing = useSetRecoilState(register_showing);\r\n//     const onRegisterClick = () => {\r\n//         setRegisterShowing((cur) => !cur);\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <Nav>\r\n//             <Logo\r\n//                 transition={{ type: \"spring\", damping: 10 }}\r\n//                 initial={{ scale: 0 }}\r\n//                 animate={{ scale: 1 }}\r\n//                 whileHover={{ scale: 1.2 }}\r\n//                 onClick={() => navigate(\"/\")}>\r\n//                     동네맛집\r\n//                 </Logo>\r\n//                 <Search onSubmit={handleSubmit(onValid)}>\r\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n//                     <SearchInput {...register(\"search\", { required: true })} />\r\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n//                     </svg></SearchBtn>\r\n//                 </Search>\r\n//                 <LoginContainer>\r\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\r\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\r\n//                 </LoginContainer>\r\n//             </Nav>  \r\n//         </>\r\n//     )\r\n// }\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { keyword, neighborhood_search, register_showing } from \"../atom\";\r\nimport axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst Nav = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\r\n    background-color: black;\r\n    height: 100px;\r\n    width: 100%;\r\n    @media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        height: 250px;\r\n    }\r\n`;\r\n\r\nconst Logo = styled(motion.div)`\r\n    text-decoration: none;\r\n    color: white;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n    font-size: 40px;\r\n    font-family: \"Black Han Sans\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n`;\r\n\r\nconst Search = styled.form`\r\n    position: relative;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 50px;\r\n    margin: 25px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 10px;\r\n    width: 300px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border-width: 0;\r\n    background-color: whitesmoke;\r\n    border-width: 0px;\r\n    outline: none;\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n    position: absolute;\r\n    background-color: transparent;\r\n    border-width: 0px;\r\n    top: 15px;\r\n    right: 10px;\r\n    width: 50px;\r\n`;\r\n\r\nconst DeleteBtn = styled(motion.button)`\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 5px;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    background-color: #d8d8d8;\r\n    border-width: 0px;\r\n    hover: {scale: 1.2}\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    display: flex;\r\n    align-items: center; /* 추가: 아이템을 수직 중앙 정렬 */\r\n    margin: 20px;\r\n`;\r\n\r\nconst Login = styled(motion.div)`\r\n    color: white;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n    color: white;\r\n    margin-right: 20px;\r\n`;\r\n\r\ninterface DataForm {\r\n    search: string;\r\n}\r\n\r\nexport default function Header() {\r\n    const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n    const navigate = useNavigate();\r\n    const setSearchWord = useSetRecoilState(keyword);\r\n    const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // 추가: 로그인 상태 관리\r\n    const [username, setUsername] = useState(''); // 추가: 사용자 이름 상태\r\n\r\n    const onValid = ({ search }: DataForm) => {\r\n        setSearchWord(search);\r\n        navigate(`/search?keyword=${search}`);\r\n    };\r\n\r\n    const searchTypeClick = async () => {\r\n        setIsNeighborhood((cur) => !cur);\r\n    };\r\n\r\n    const setRegisterShowing = useSetRecoilState(register_showing);\r\n\r\n    const onRegisterClick = () => {\r\n        setRegisterShowing((cur) => !cur);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 추가: 페이지 로드시 로그인 상태 확인\r\n        // 예시로 localStorage에 로그인 정보를 저장했다고 가정합니다.\r\n        const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n        if (isLoggedIn === 'true') {\r\n            setIsLoggedIn(true);\r\n            const savedUsername = localStorage.getItem('username');\r\n            if (savedUsername) {\r\n                setUsername(savedUsername);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        // 추가: 로그아웃 처리\r\n        setIsLoggedIn(false);\r\n        localStorage.removeItem('isLoggedIn');\r\n        localStorage.removeItem('username');\r\n        // 기타 로그아웃 관련 처리 (예: 서버로 로그아웃 요청 등)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <Logo\r\n                    transition={{ type: \"spring\", damping: 10 }}\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    whileHover={{ scale: 1.2 }}\r\n                    onClick={() => navigate(\"/\")}\r\n                >\r\n                    동네맛집\r\n                </Logo>\r\n                <Search onSubmit={handleSubmit(onValid)}>\r\n                    {watch(\"search\") ? (\r\n                        <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" />\r\n                    ) : null}\r\n                    <SearchInput {...register(\"search\", { required: true })} />\r\n                    <SearchBtn type=\"submit\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"25\"\r\n                            height=\"25\"\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-search\"\r\n                            viewBox=\"0 0 16 16\"\r\n                        >\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n                        </svg>\r\n                    </SearchBtn>\r\n                </Search>\r\n                <LoginContainer>\r\n                    {isLoggedIn ? (\r\n                        <>\r\n                            <UserInfo>{username}</UserInfo>\r\n                            <Login onClick={handleLogout}>로그아웃</Login>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login onClick={() => navigate(\"/register\")}>회원가입</Login>\r\n                            <Login onClick={() => navigate(\"/login\")}>로그인</Login>\r\n                        </>\r\n                    )}\r\n                </LoginContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAeC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,cAAc,EAAkBC,iBAAiB,QAAQ,QAAQ;AAC1E,SAASC,OAAO,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,SAAS;AAExE,SAA0BC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,GAAG,GAAGZ,MAAM,CAACa,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAZIF,GAAG;AAcT,MAAMG,IAAI,GAAGf,MAAM,CAACO,MAAM,CAACM,GAAG,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GATID,IAAI;AAWV,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}