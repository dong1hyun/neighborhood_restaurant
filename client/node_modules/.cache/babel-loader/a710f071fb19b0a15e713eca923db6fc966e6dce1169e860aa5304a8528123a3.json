{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;//각 페이지의 헤더를 리턴하는 컴포넌트\nimport{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{useNavigate}from\"react-router-dom\";import{useRecoilState,useSetRecoilState}from\"recoil\";import{keyword,loginState,signinState,session,name}from\"../atom\";import axios from\"axios\";import{motion}from\"framer-motion\";import{Nav,Navbar}from\"react-bootstrap\";import{useEffect,useState}from\"react\";import Register from\"./Register\";import Login from\"./Login\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Logo=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    text-decoration: none;\\n    color: rgba(75, 207, 250,1.0);\\n    margin-left: 30px;\\n    margin-top:33px;\\n    margin-bottom: 10px;\\n    cursor: pointer;\\n    font-size: 40px;\\n    font-family: \\\"Black Han Sans\\\", sans-serif;\\n    font-weight: 400;\\n    font-style: normal;\\n\"])));const Search=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    position: relative;\\n    background-color: transparent;\\n    width: 400px;\\n    height: 50px;\\n    margin-top: 25px;\\n    border-radius: 10px;\\n    @media screen and (max-width: 700px) {\\n        width: 300px;\\n        margin-left: 0;\\n    }\\n\"])));const SearchInput=styled.input(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    left: 35px;\\n    top: 5px;\\n    width: 350px;\\n    height: 40px;\\n    font-size: 20px;\\n    border-radius: 10px;\\n    border-width: 0;\\n    background-color: #eeeeee;\\n    border-width: 0px;\\n    outline: none;\\n    align-items: center;\\n    @media screen and (max-width: 700px) {\\n        width: 200px;\\n        font-size: 12px;\\n    }\\n\"])));const SearchBtn=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    background-color: transparent;\\n    border-width: 0px;\\n    top: 15px;\\n    right: 10px;\\n    width: 50px;\\n    @media screen and (max-width: 700px) {\\n        right: 60px;\\n    }\\n\"])));const DeleteBtn=styled(motion.button)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 13px;\\n    left: 5px;\\n    margin-right: 100px;\\n    background-color: transparent;\\n    border-radius: 5px;\\n    background-color: #d8d8d8;\\n    border-width: 0px;\\n    hover: {scale: 1.2}\\n\"])));const LoginContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    margin: 20px;\\n    align-items: center;\\n\"])));const LoginBox=styled(motion.button)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    color: black;\\n    margin: 10px;\\n    margin-top: 20px;\\n    background-color: transparent;\\n    border: none;\\n\"])));export default function Header(){const{register,handleSubmit,getValues,watch}=useForm();const navigate=useNavigate();const setSearchWord=useSetRecoilState(keyword);const[signin,setSignin]=useRecoilState(signinState);const[login,setLogin]=useRecoilState(loginState);const[sessionID,setSessionID]=useRecoilState(session);const[userName,setUserName]=useRecoilState(name);const[sessionExpiration,setSessionExpiration]=useState(null);const onValid=_ref=>{let{search}=_ref;setSearchWord(search);navigate(\"/search?keyword=\".concat(search));};const handleLogout=async()=>{try{await axios.get('/logout');// 서버로 로그아웃 요청 보냄\nsessionStorage.removeItem('sessionID');// 세션 스토리지에서 세션 ID 제거\nsetSessionID('');// 세션 ID 초기화\nsetUserName('');navigate('/');// 홈 페이지로 이동\n}catch(error){console.error('로그아웃 중 오류가 발생했습니다:',error);}};useEffect(()=>{const loggedInSessionID=sessionStorage.getItem('sessionID');// 세션 스토리지에서 세션 아이디 가져오기\nif(loggedInSessionID){setSessionID(loggedInSessionID);}},[]);useEffect(()=>{const loggedInSessionID=sessionStorage.getItem('sessionID');// 세션 스토리지에서 세션 아이디 가져오기\nconst loggedInUserName=sessionStorage.getItem('userName');// 세션 스토리지에서 이름 가져오기\nif(loggedInSessionID){setSessionID(loggedInSessionID);}if(loggedInUserName){setUserName(loggedInUserName);// 세션 스토리지에서 가져온 사용자 이름 설정\n}// 세션 ID가 있는 경우에만 실행합니다.\nif(loggedInSessionID){// 만료 시간을 현재 시간에서 1분 후로 설정합니다.\nconst expiration=new Date();expiration.setMilliseconds(expiration.getMilliseconds()+60000);setSessionExpiration(expiration);// 1분 후에 자동으로 로그아웃되도록 타이머를 설정합니다.\nconst timer=setTimeout(()=>{handleLogout();},600000);// 컴포넌트가 언마운트되거나 업데이트되기 전에 타이머를 정리합니다.\nreturn()=>clearTimeout(timer);}// setSessionID(\"test\");\n},[sessionID]);// 추가) 세션 만료 시간 헤더 표시 기능, 위치 조정 필요\nuseEffect(()=>{// 세션 만료 시간이 있는 경우에만 실행합니다.\nif(sessionExpiration){// 남은 시간을 계산합니다.\nconst remainingTime=sessionExpiration.getTime()-Date.now();// 남은 시간이 양수인 경우에만 타이머를 설정합니다.\nif(remainingTime>0){// 1초마다 남은 시간을 계산하고 표시하는 타이머를 설정합니다.\nconst timer=setInterval(()=>{const remainingTime=sessionExpiration.getTime()-Date.now();// 남은 시간이 음수면 세션이 만료되었으므로 타이머를 정리합니다.\nif(remainingTime<=0){clearInterval(timer);handleLogout();}else{// 세션 만료 시간을 문자열로 변환하여 설정합니다.\nconst minutes=Math.floor(remainingTime%(1000*60*60)/(1000*60));const seconds=Math.floor(remainingTime%(1000*60)/1000);const formattedTime=\"\".concat(minutes,\"\\uBD84 \").concat(seconds,\"\\uCD08\");setSessionExpiration(new Date());}},1000);// 컴포넌트가 언마운트되거나 업데이트되기 전에 타이머를 정리합니다.\nreturn()=>clearInterval(timer);}else{// 남은 시간이 음수이면 세션 만료되었으므로 로그아웃 처리를 수행합니다.\nhandleLogout();}}},[sessionExpiration]);return/*#__PURE__*/_jsxs(_Fragment,{children:[signin?/*#__PURE__*/_jsx(Register,{}):null,login?/*#__PURE__*/_jsx(Login,{}):null,/*#__PURE__*/_jsxs(Navbar,{expand:\"md\",className:\"bg-light shadow mb-5\",children:[/*#__PURE__*/_jsx(Navbar.Toggle,{className:\"bg-white\",\"aria-controls\":\"basic-navbar-nav\"}),/*#__PURE__*/_jsxs(Navbar.Collapse,{className:\"\",id:\"basic-navbar-nav\",children:[/*#__PURE__*/_jsx(Nav,{className:\"me-auto\",children:/*#__PURE__*/_jsx(Logo,{className:\"\",transition:{type:\"spring\",damping:10},initial:{scale:0},animate:{scale:1},whileHover:{scale:1.2},onClick:()=>navigate(\"/\"),children:\"\\uB3D9\\uB124\\uB9DB\\uC9D1\"})}),/*#__PURE__*/_jsxs(Nav,{className:\"ml-auto\",children:[sessionExpiration&&/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uC138\\uC158 \\uB9CC\\uB8CC \\uC2DC\\uAC04: \",sessionExpiration.toLocaleTimeString()]}),/*#__PURE__*/_jsxs(Search,{onSubmit:handleSubmit(onValid),children:[watch('search')?/*#__PURE__*/_jsx(DeleteBtn,{className:\"btn-close\",\"aria-label\":\"Close\",type:\"reset\"}):null,/*#__PURE__*/_jsx(SearchInput,{placeholder:\"\\uC2DD\\uB2F9\\uC774\\uB098 \\uC9C0\\uC5ED\\uC744 \\uC785\\uB825\\uD574\\uBCF4\\uC138\\uC694!\",...register(\"search\",{required:true})}),/*#__PURE__*/_jsx(SearchBtn,{type:\"submit\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"22\",height:\"22\",fill:\"currentColor\",className:\"bi bi-search\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"})})})]}),/*#__PURE__*/_jsx(LoginContainer,{children:sessionID?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(LoginBox,{onClick:()=>navigate(\"/myPage/\".concat(sessionID)),children:[userName,\"\\uB2D8\"]}),/*#__PURE__*/_jsx(LoginBox,{onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LoginBox,{onClick:()=>{setLogin(cur=>!cur);},children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(LoginBox,{onClick:()=>{setSignin(cur=>!cur);},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})]})})]})]})]})]});}","map":{"version":3,"names":["useForm","styled","useNavigate","useRecoilState","useSetRecoilState","keyword","loginState","signinState","session","name","axios","motion","Nav","Navbar","useEffect","useState","Register","Login","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Logo","div","_templateObject","_taggedTemplateLiteral","Search","form","_templateObject2","SearchInput","input","_templateObject3","SearchBtn","button","_templateObject4","DeleteBtn","_templateObject5","LoginContainer","_templateObject6","LoginBox","_templateObject7","Header","register","handleSubmit","getValues","watch","navigate","setSearchWord","signin","setSignin","login","setLogin","sessionID","setSessionID","userName","setUserName","sessionExpiration","setSessionExpiration","onValid","_ref","search","concat","handleLogout","get","sessionStorage","removeItem","error","console","loggedInSessionID","getItem","loggedInUserName","expiration","Date","setMilliseconds","getMilliseconds","timer","setTimeout","clearTimeout","remainingTime","getTime","now","setInterval","clearInterval","minutes","Math","floor","seconds","formattedTime","children","expand","className","Toggle","Collapse","id","transition","type","damping","initial","scale","animate","whileHover","onClick","toLocaleTimeString","onSubmit","placeholder","required","xmlns","width","height","fill","viewBox","d","cur"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/Header.tsx"],"sourcesContent":["//각 페이지의 헤더를 리턴하는 컴포넌트\r\nimport { useForm } from \"react-hook-form\"\r\nimport styled from \"styled-components\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { keyword, neighborhood_search, loginState, signinState, session, name } from \"../atom\";\r\nimport axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\n\r\nconst Logo = styled(motion.div)`\r\n    text-decoration: none;\r\n    color: rgba(75, 207, 250,1.0);\r\n    margin-left: 30px;\r\n    margin-top:33px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    font-size: 40px;\r\n    font-family: \"Black Han Sans\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n`\r\n\r\nconst Search = styled.form`\r\n    position: relative;\r\n    background-color: transparent;\r\n    width: 400px;\r\n    height: 50px;\r\n    margin-top: 25px;\r\n    border-radius: 10px;\r\n    @media screen and (max-width: 700px) {\r\n        width: 300px;\r\n        margin-left: 0;\r\n    }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 5px;\r\n    width: 350px;\r\n    height: 40px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border-width: 0;\r\n    background-color: #eeeeee;\r\n    border-width: 0px;\r\n    outline: none;\r\n    align-items: center;\r\n    @media screen and (max-width: 700px) {\r\n        width: 200px;\r\n        font-size: 12px;\r\n    }\r\n`\r\n\r\nconst SearchBtn = styled.button`\r\n    position: absolute;\r\n    background-color: transparent;\r\n    border-width: 0px;\r\n    top: 15px;\r\n    right: 10px;\r\n    width: 50px;\r\n    @media screen and (max-width: 700px) {\r\n        right: 60px;\r\n    }\r\n`\r\n\r\nconst DeleteBtn = styled(motion.button)`\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 5px;\r\n    margin-right: 100px;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    background-color: #d8d8d8;\r\n    border-width: 0px;\r\n    hover: {scale: 1.2}\r\n`\r\n\r\nconst LoginContainer = styled.div`\r\n    margin: 20px;\r\n    align-items: center;\r\n`\r\n\r\nconst LoginBox = styled(motion.button)`\r\n    color: black;\r\n    margin: 10px;\r\n    margin-top: 20px;\r\n    background-color: transparent;\r\n    border: none;\r\n`\r\n\r\ninterface searchForm {\r\n    search: string\r\n}\r\n\r\nexport default function Header() {\r\n    const { register, handleSubmit, getValues, watch } = useForm<searchForm>();\r\n    const navigate = useNavigate();\r\n    const setSearchWord = useSetRecoilState(keyword);\r\n    const [signin, setSignin] = useRecoilState(signinState)\r\n    const [login, setLogin] = useRecoilState(loginState);\r\n    const [sessionID, setSessionID] = useRecoilState(session)\r\n    const [userName, setUserName] = useRecoilState(name);\r\n    const [sessionExpiration, setSessionExpiration] = useState<Date | null>(null);\r\n    const onValid = ({ search }: searchForm) => {\r\n        setSearchWord(search);\r\n        navigate(`/search?keyword=${search}`);\r\n    }\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/logout'); // 서버로 로그아웃 요청 보냄\r\n            sessionStorage.removeItem('sessionID'); // 세션 스토리지에서 세션 ID 제거\r\n            setSessionID(''); // 세션 ID 초기화\r\n            setUserName('');\r\n            navigate('/'); // 홈 페이지로 이동\r\n        } catch (error) {\r\n            console.error('로그아웃 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID'); // 세션 스토리지에서 세션 아이디 가져오기\r\n\r\n        if (loggedInSessionID) {\r\n            setSessionID(loggedInSessionID);\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID'); // 세션 스토리지에서 세션 아이디 가져오기\r\n        const loggedInUserName = sessionStorage.getItem('userName'); // 세션 스토리지에서 이름 가져오기\r\n    \r\n        if (loggedInSessionID) {\r\n            setSessionID(loggedInSessionID);\r\n        }\r\n        if (loggedInUserName) {\r\n            setUserName(loggedInUserName); // 세션 스토리지에서 가져온 사용자 이름 설정\r\n        }\r\n    \r\n        // 세션 ID가 있는 경우에만 실행합니다.\r\n        if (loggedInSessionID) {\r\n            // 만료 시간을 현재 시간에서 1분 후로 설정합니다.\r\n            const expiration = new Date();\r\n            expiration.setMilliseconds(expiration.getMilliseconds() + 60000);\r\n            setSessionExpiration(expiration);\r\n    \r\n            // 1분 후에 자동으로 로그아웃되도록 타이머를 설정합니다.\r\n            const timer = setTimeout(() => {\r\n                handleLogout();\r\n            }, 600000);\r\n    \r\n            // 컴포넌트가 언마운트되거나 업데이트되기 전에 타이머를 정리합니다.\r\n            return () => clearTimeout(timer);\r\n        }\r\n        // setSessionID(\"test\");\r\n    }, [sessionID]);\r\n    \r\n    // 추가) 세션 만료 시간 헤더 표시 기능, 위치 조정 필요\r\n    useEffect(() => {\r\n        // 세션 만료 시간이 있는 경우에만 실행합니다.\r\n        if (sessionExpiration) {\r\n            // 남은 시간을 계산합니다.\r\n            const remainingTime = sessionExpiration.getTime() - Date.now();\r\n    \r\n            // 남은 시간이 양수인 경우에만 타이머를 설정합니다.\r\n            if (remainingTime > 0) {\r\n                // 1초마다 남은 시간을 계산하고 표시하는 타이머를 설정합니다.\r\n                const timer = setInterval(() => {\r\n                    const remainingTime = sessionExpiration.getTime() - Date.now();\r\n                    // 남은 시간이 음수면 세션이 만료되었으므로 타이머를 정리합니다.\r\n                    if (remainingTime <= 0) {\r\n                        clearInterval(timer);\r\n                        handleLogout();\r\n                    } else {\r\n                        // 세션 만료 시간을 문자열로 변환하여 설정합니다.\r\n                        const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\r\n                        const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\r\n                        const formattedTime = `${minutes}분 ${seconds}초`;\r\n                        setSessionExpiration(new Date());\r\n                    }\r\n                }, 1000);\r\n    \r\n                // 컴포넌트가 언마운트되거나 업데이트되기 전에 타이머를 정리합니다.\r\n                return () => clearInterval(timer);\r\n            } else {\r\n                // 남은 시간이 음수이면 세션 만료되었으므로 로그아웃 처리를 수행합니다.\r\n                handleLogout();\r\n            }\r\n        }\r\n    }, [sessionExpiration]);\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            {signin ? <Register /> : null}\r\n            {login ? <Login /> : null}\r\n            <Navbar expand=\"md\" className=\"bg-light shadow mb-5\">\r\n                <Navbar.Toggle className=\"bg-white\" aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse className=\"\" id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Logo\r\n                            className=\"\"\r\n                            transition={{ type: \"spring\", damping: 10 }}\r\n                            initial={{ scale: 0 }}\r\n                            animate={{ scale: 1 }}\r\n                            whileHover={{ scale: 1.2 }}\r\n                            onClick={() => navigate(\"/\")}>\r\n                            동네맛집\r\n                        </Logo>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {sessionExpiration && (\r\n                            <div>\r\n                                세션 만료 시간: {sessionExpiration.toLocaleTimeString()}\r\n                            </div>\r\n                        )}\r\n                        <Search onSubmit={handleSubmit(onValid)}>\r\n                            {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n                            <SearchInput placeholder=\"식당이나 지역을 입력해보세요!\" {...register(\"search\", { required: true })} />\r\n                            <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n                            </svg></SearchBtn>\r\n                        </Search>\r\n                        <LoginContainer>\r\n                            {sessionID ?\r\n                                <><LoginBox onClick={() => navigate(`/myPage/${sessionID}`)}>{userName}님</LoginBox><LoginBox onClick={handleLogout}>로그아웃</LoginBox></>\r\n                                : <><LoginBox onClick={() => { setLogin(cur => !cur) }}>로그인</LoginBox><LoginBox onClick={() => { setSignin(cur => !cur) }}>회원가입</LoginBox></>}\r\n                        </LoginContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}