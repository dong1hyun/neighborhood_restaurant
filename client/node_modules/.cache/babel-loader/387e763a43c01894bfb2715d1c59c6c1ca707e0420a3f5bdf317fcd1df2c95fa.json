{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import axios from'axios';import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{motion}from\"framer-motion\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginContainer=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    z-index: 1;\\n    top: 200px;\\n    left: 0;\\n    right: 0;\\n    margin: 0 auto;\\n    width: 400px;\\n    height: 200px;\\n    background-color: rgba(255, 255, 255, 1);\\n    border-radius: 40px;\\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\\n    text-align: center;\\n\"])));// 모션 변형\nconst boxVariants={initial:{opacity:0,scale:0},visible:{opacity:1,scale:1},leaving:{opacity:0,scale:0}};export default function LoginBox(){const[formData,setFormData]=useState({id:'',password:''});const[userId,setUserId]=useState('');const navigate=useNavigate();useEffect(()=>{if(userId){// 로그인 성공 후 위치 정보 저장\nsaveLocation();}},[userId]);// userId가 변경될 때마다 실행\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('/login',formData);console.log('로그인 응답 데이터:',response.data);// 로그인 응답 데이터 확인\nconst{user}=response.data;// 사용자 정보 객체\nif(response.data.message==='로그인 성공'&&user&&user.id){// 로그인 성공 시 홈 화면으로 이동\nnavigate('/');setUserId(user.id);// 사용자의 id 저장\nconsole.log(\"사용자 ID:\",user.id);// 사용자 ID 콘솔에 출력\n}else{console.error('로그인 실패:',response.data.message);}}catch(error){console.error('로그인 중 오류가 발생했습니다:',error);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const saveLocation=async()=>{try{navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;await axios.post('/location',{id:userId,x:longitude,y:latitude});console.log('사용자 ID:',userId);// 사용자 ID 콘솔에 출력\nconsole.log('위치 좌표:',longitude,latitude);// 위치 좌표 콘솔에 출력\nalert('위치가 성공적으로 저장되었습니다.');});}catch(error){console.error('위치 저장 중 오류가 발생했습니다:',error);alert('위치를 저장하는 도중 오류가 발생했습니다.');}};const handleSaveLocation=()=>{// 위치 저장 버튼 클릭 시 위치 정보 저장\nsaveLocation();};return/*#__PURE__*/_jsxs(LoginContainer,{variants:boxVariants,initial:\"initial\",animate:\"visible\",exit:\"leaving\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC544\\uC774\\uB514:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:formData.id,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uBE44\\uBC00\\uBC88\\uD638:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveLocation,children:\"\\uC704\\uCE58 \\uC800\\uC7A5\"})]});}","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","motion","styled","jsx","_jsx","jsxs","_jsxs","LoginContainer","div","_templateObject","_taggedTemplateLiteral","boxVariants","initial","opacity","scale","visible","leaving","LoginBox","formData","setFormData","id","password","userId","setUserId","navigate","saveLocation","handleSubmit","e","preventDefault","response","post","console","log","data","user","message","error","handleChange","target","name","value","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","x","y","alert","handleSaveLocation","variants","animate","exit","children","onSubmit","type","onChange","onClick"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/LoginBox.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, ChangeEvent, FormEvent, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface FormData {\r\n    id: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 200px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n    text-align: center;\r\n`;\r\n\r\n// 모션 변형\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n};\r\n\r\nexport default function LoginBox() {\r\n    const [formData, setFormData] = useState<FormData>({ id: '', password: '' });\r\n    const [userId, setUserId] = useState<string>('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            // 로그인 성공 후 위치 정보 저장\r\n            saveLocation();\r\n        }\r\n    }, [userId]); // userId가 변경될 때마다 실행\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/login', formData);\r\n            console.log('로그인 응답 데이터:', response.data); // 로그인 응답 데이터 확인\r\n            const { user } = response.data; // 사용자 정보 객체\r\n            if (response.data.message === '로그인 성공' && user && user.id) {\r\n                // 로그인 성공 시 홈 화면으로 이동\r\n                navigate('/');\r\n                setUserId(user.id); // 사용자의 id 저장\r\n                console.log(\"사용자 ID:\", user.id); // 사용자 ID 콘솔에 출력\r\n            } else {\r\n                console.error('로그인 실패:', response.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const saveLocation = async () => {\r\n        try {\r\n            navigator.geolocation.getCurrentPosition(async (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                await axios.post('/location', { id: userId, x: longitude, y: latitude });\r\n                console.log('사용자 ID:', userId); // 사용자 ID 콘솔에 출력\r\n                console.log('위치 좌표:', longitude, latitude); // 위치 좌표 콘솔에 출력\r\n                alert('위치가 성공적으로 저장되었습니다.');\r\n            });\r\n        } catch (error) {\r\n            console.error('위치 저장 중 오류가 발생했습니다:', error);\r\n            alert('위치를 저장하는 도중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleSaveLocation = () => {\r\n        // 위치 저장 버튼 클릭 시 위치 정보 저장\r\n        saveLocation();\r\n    };\r\n\r\n    return (\r\n        <LoginContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">로그인</button>\r\n            </form>\r\n            <button onClick={handleSaveLocation}>위치 저장</button>\r\n        </LoginContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}