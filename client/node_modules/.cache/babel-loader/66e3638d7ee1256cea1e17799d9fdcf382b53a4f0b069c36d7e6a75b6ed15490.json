{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import axios from\"axios\";import{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LocationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    margin: auto;\\n    border-radius: 10px;\\n    width: 95%;\\n    height: 200px;\\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\\n    background-color: #2275eb97;\\n    margin-top: 30px;\\n    margin-bottom: 50px;\\n    text-align: center;\\n\"])));const GetLocationButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    background-color: white;\\n    color: black;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    margin-top: 40px;\\n    cursor: pointer;\\n\"])));const SetLocationButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    background-color: white;\\n    color: black;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n\"])));const LocationForm=styled.form(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\nmargin-top: 40px;\\n\"])));const LocationInput=styled.input(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    width: 300px;\\n    height: 30px;\\n    border-radius: 5px;\\n    border: none;\\n    margin-right: 10px;\\n    margin-bottom: 10px;\\n    padding-left: 10px;\\n\"])));export default function LocaionSet(){const[searchResult,setSearchResult]=useState('');const[userLocation,setUserLocation]=useState(null);const[userAddress,setUserAddress]=useState('');const[searchTerm,setSearchTerm]=useState('');const[sessionID,setSessionID]=useState('');const{register,handleSubmit}=useForm();const handleSearch=async _ref=>{let{location}=_ref;try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/search/keyword.json?query=\".concat(location),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const{address_name}=response.data.documents[0];setSearchResult(address_name);if(isAddressMatch(address_name,userAddress)){console.log('검색된 위치와 사용자 위치가 동일합니다.');// 여기서 서버로 값을 보내는 작업 수행\nsendLocationToServer(sessionID,address_name);}else{console.log('검색된 위치와 사용자 위치가 동일하지 않습니다.');}}else{console.error('검색 결과를 찾을 수 없습니다.');}}catch(error){console.error('검색 중 오류가 발생했습니다:',error);}};const getAddressFromCoordinates=async(latitude,longitude)=>{try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/geo/coord2address.json?x=\".concat(longitude,\"&y=\").concat(latitude),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const address=response.data.documents[0].address.address_name;return address;}else{console.error('주소를 찾을 수 없습니다.');return null;}}catch(error){console.error('주소를 가져오는 중 오류가 발생했습니다:',error);return null;}};const handleGetUserLocation=()=>{navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;setUserLocation({x:longitude,y:latitude});const address=await getAddressFromCoordinates(latitude,longitude);if(address){setUserAddress(address);console.log('사용자의 위치:',address);}});};const isAddressMatch=(address1,address2)=>{const regex=/(.+?(읍|면|동))/;const match1=address1.match(regex);const match2=address2.match(regex);return!!match1&&!!match2&&match1[1]===match2[1];};const sendLocationToServer=async(sessionID,address)=>{try{// 주소에서 숫자를 제거합니다.\nconst cleanedAddress=address.replace(/\\d+/g,'').trim().replace(/-$/,'');const response=await axios.post('/location',{sessionID,address:cleanedAddress});console.log('서버 응답:',response.data);}catch(error){console.error('서버로 위치 전송 중 오류가 발생했습니다:',error);}};useEffect(()=>{const loggedInSessionID=sessionStorage.getItem('sessionID')+'';setSessionID(loggedInSessionID);},[]);return/*#__PURE__*/_jsxs(LocationContainer,{children:[/*#__PURE__*/_jsx(GetLocationButton,{onClick:handleGetUserLocation,children:\"\\uB0B4 \\uC704\\uCE58 \\uAC00\\uC838\\uC624\\uAE30\"}),/*#__PURE__*/_jsxs(LocationForm,{onSubmit:handleSubmit(handleSearch),children:[/*#__PURE__*/_jsx(LocationInput,{placeholder:\"\\uC790\\uC2E0\\uC774 \\uC18D\\uD55C \\uC74D/\\uBA74/\\uB3D9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\",value:searchTerm// searchTerm 값으로 입력란의 값 설정\n,onChange:e=>setSearchTerm(e.target.value)// 입력값 변경 시 searchTerm 업데이트\n}),/*#__PURE__*/_jsx(SetLocationButton,{type:\"submit\",children:\"\\uC778\\uC99D\\uD558\\uAE30\"})]})]});}","map":{"version":3,"names":["axios","useEffect","useState","useForm","styled","jsx","_jsx","jsxs","_jsxs","LocationContainer","div","_templateObject","_taggedTemplateLiteral","GetLocationButton","button","_templateObject2","SetLocationButton","_templateObject3","LocationForm","form","_templateObject4","LocationInput","input","_templateObject5","LocaionSet","searchResult","setSearchResult","userLocation","setUserLocation","userAddress","setUserAddress","searchTerm","setSearchTerm","sessionID","setSessionID","register","handleSubmit","handleSearch","_ref","location","response","get","concat","headers","Authorization","data","documents","length","address_name","isAddressMatch","console","log","sendLocationToServer","error","getAddressFromCoordinates","latitude","longitude","address","handleGetUserLocation","navigator","geolocation","getCurrentPosition","position","coords","x","y","address1","address2","regex","match1","match","match2","cleanedAddress","replace","trim","post","loggedInSessionID","sessionStorage","getItem","children","onClick","onSubmit","placeholder","value","onChange","e","target","type"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/home/LocationSet.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LocationContainer = styled.div`\r\n    margin: auto;\r\n    border-radius: 10px;\r\n    width: 95%;\r\n    height: 200px;\r\n    box-shadow: 5px 2px 10px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.2);\r\n    background-color: #2275eb97;\r\n    margin-top: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n`\r\n\r\nconst GetLocationButton = styled.button`\r\n    background-color: white;\r\n    color: black;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    margin-top: 40px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SetLocationButton = styled.button`\r\n    background-color: white;\r\n    color: black;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LocationForm = styled.form`\r\nmargin-top: 40px;\r\n`;\r\n\r\nconst LocationInput = styled.input`\r\n    width: 300px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n    padding-left: 10px;\r\n`;\r\n\r\ninterface searchForm {\r\n    location: string\r\n}\r\n\r\nexport default function LocaionSet() {\r\n    const [searchResult, setSearchResult] = useState<string>('');\r\n    const [userLocation, setUserLocation] = useState<{ x: number, y: number } | null>(null);\r\n    const [userAddress, setUserAddress] = useState<string>('');\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n    const [sessionID, setSessionID] = useState<string>('');\r\n    const { register, handleSubmit } = useForm<searchForm>();\r\n    const handleSearch = async ({location}: searchForm) => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/search/keyword.json?query=${location}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const { address_name } = response.data.documents[0];\r\n                setSearchResult(address_name);\r\n                if (isAddressMatch(address_name, userAddress)) {\r\n                    console.log('검색된 위치와 사용자 위치가 동일합니다.');\r\n                    // 여기서 서버로 값을 보내는 작업 수행\r\n                    sendLocationToServer(sessionID, address_name);\r\n                } else {\r\n                    console.log('검색된 위치와 사용자 위치가 동일하지 않습니다.');\r\n                }\r\n            } else {\r\n                console.error('검색 결과를 찾을 수 없습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('검색 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    const getAddressFromCoordinates = async (latitude: number, longitude: number) => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${longitude}&y=${latitude}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const address = response.data.documents[0].address.address_name;\r\n                return address;\r\n            } else {\r\n                console.error('주소를 찾을 수 없습니다.');\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            console.error('주소를 가져오는 중 오류가 발생했습니다:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const handleGetUserLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(async (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setUserLocation({ x: longitude, y: latitude });\r\n            const address = await getAddressFromCoordinates(latitude, longitude);\r\n            if (address) {\r\n                setUserAddress(address);\r\n                console.log('사용자의 위치:', address);\r\n            }\r\n        });\r\n    };\r\n\r\n    const isAddressMatch = (address1: string, address2: string): boolean => {\r\n        const regex = /(.+?(읍|면|동))/;\r\n        const match1 = address1.match(regex);\r\n        const match2 = address2.match(regex);\r\n        return !!match1 && !!match2 && match1[1] === match2[1];\r\n    };\r\n\r\n    const sendLocationToServer = async (sessionID: string, address: string) => {\r\n        try {\r\n            // 주소에서 숫자를 제거합니다.\r\n            const cleanedAddress = address.replace(/\\d+/g, '').trim().replace(/-$/, '');\r\n            \r\n            const response = await axios.post('/location', { sessionID, address: cleanedAddress });\r\n            console.log('서버 응답:', response.data);\r\n        } catch (error) {\r\n            console.error('서버로 위치 전송 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID') + '';\r\n        setSessionID(loggedInSessionID);\r\n    }, [])\r\n    return (\r\n        <LocationContainer>\r\n            <GetLocationButton onClick={handleGetUserLocation}>내 위치 가져오기</GetLocationButton>\r\n            <LocationForm onSubmit={handleSubmit(handleSearch)}>\r\n                <LocationInput\r\n                    placeholder=\"자신이 속한 읍/면/동을 입력해주세요!\"\r\n                    value={searchTerm} // searchTerm 값으로 입력란의 값 설정\r\n                    onChange={(e) => setSearchTerm(e.target.value)} // 입력값 변경 시 searchTerm 업데이트\r\n                />\r\n                <SetLocationButton type=\"submit\">인증하기</SetLocationButton>\r\n            </LocationForm>\r\n        </LocationContainer>\r\n    );\r\n    \r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}