{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import Overlay from\"../Overlay\";import React,{useState}from'react';import axios from\"axios\";import{motion}from\"framer-motion\";import{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{useRecoilState,useSetRecoilState}from\"recoil\";import{loginState,name,session}from\"../../atom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginContainer=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    z-index: 5;\\n    top: 300px;\\n    text-align: center;\\n    background-color: whitesmoke;\\n    width: 400px;\\n    height: 200px;\\n    background-color: rgba(255, 255, 255, 1);\\n    border-radius: 40px;\\n    position: absolute;\\n    top: 200px;\\n    left: 0px;\\n    right: 0px;\\n    margin: 0 auto;\\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\\n    @media screen and (max-width: 700px) {\\n        width: 250px;\\n    }\\n\"])));const LoginList=styled.li(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    margin: 5px;\\n\"])));const LoginInput=styled.input(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 30px;\\n    border-radius: 5px;\\n    border-width: 1px;\\n\"])));const LoginBtn=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    margin: 0 auto;\\n    margin-top: 15px;\\n    width: 100px;\\n    height: 30px;\\n    border-width: 0px;\\n    text-align: center;\\n    border-radius: 5px;\\n\"])));const boxVariants={initial:{opacity:0,scale:0},visible:{opacity:1,scale:1},leaving:{opacity:0,scale:0}};export default function Login(){const{register,handleSubmit,formState:{errors}}=useForm();const[sessionID,setSessionID]=useRecoilState(session);const[nickName,setNickName]=useRecoilState(name);const[isLocationSaved,setIsLocationSaved]=useState(false);const setLogin=useSetRecoilState(loginState);const LoginSuccess=async data=>{try{const response=await axios.post('/login',data);// console.log('로그인 응답 데이터:', response.data); // 로그인 응답 데이터 확인\nconst{sessionID,nickName}=response.data;// 세션 ID 및 사용자 이름 받아오기\nif(response.data.message==='로그인 성공'&&sessionID){setSessionID(sessionID);// 세션 ID 설정\nsetNickName(nickName);// 사용자 아이디 설정\nsessionStorage.setItem('sessionID',sessionID);// 세션 스토리지에 세션 ID 저장\nsessionStorage.setItem('nickName',nickName);// 세션 스토리지에 사용자 아이디 저장\n// 위치 저장 요청 보내기\n// saveLocation(sessionID); // 세션 ID를 인자로 사용하여 위치 저장 요청 보내기\nalert(\"로그인에 성공했습니다.\");setLogin(false);}else{console.error('로그인 실패:',response.data.message);}}catch(error){console.error('로그인 중 오류가 발생했습니다:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(LoginContainer,{className:\"card\",variants:boxVariants,initial:\"initial\",animate:\"visible\",exit:\"leaving\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(LoginSuccess),children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-group list-group-flush\",children:[/*#__PURE__*/_jsx(LoginList,{className:\"list-group-item\",children:/*#__PURE__*/_jsx(LoginInput,{...register(\"id\"),placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"})}),/*#__PURE__*/_jsx(LoginList,{className:\"list-group-item\",children:/*#__PURE__*/_jsx(LoginInput,{...register(\"password\"),placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"})}),/*#__PURE__*/_jsx(LoginBtn,{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]})]})}),/*#__PURE__*/_jsx(Overlay,{})]});}","map":{"version":3,"names":["Overlay","React","useState","axios","motion","useForm","styled","useRecoilState","useSetRecoilState","loginState","name","session","jsx","_jsx","jsxs","_jsxs","LoginContainer","div","_templateObject","_taggedTemplateLiteral","LoginList","li","_templateObject2","LoginInput","input","_templateObject3","LoginBtn","button","_templateObject4","boxVariants","initial","opacity","scale","visible","leaving","Login","register","handleSubmit","formState","errors","sessionID","setSessionID","nickName","setNickName","isLocationSaved","setIsLocationSaved","setLogin","LoginSuccess","data","response","post","message","sessionStorage","setItem","alert","console","error","children","className","variants","animate","exit","onSubmit","placeholder","type"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/login/Login.tsx"],"sourcesContent":["import Overlay from \"../Overlay\";\r\nimport React, { FormEvent, useEffect, useState } from 'react';\r\nimport axios from \"axios\"\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport styled from \"styled-components\"\r\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\r\nimport { loginState, name, session } from \"../../atom\";\r\n\r\nconst LoginContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 5;\r\n    top: 300px;\r\n    text-align: center;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    position: absolute;\r\n    top: 200px;\r\n    left: 0px;\r\n    right: 0px;\r\n    margin: 0 auto;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n    @media screen and (max-width: 700px) {\r\n        width: 250px;\r\n    }\r\n`\r\n\r\nconst LoginList = styled.li`\r\n    margin: 5px;\r\n`\r\n\r\nconst LoginInput = styled.input`\r\n    width: 100%;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    border-width: 1px;\r\n`\r\n\r\nconst LoginBtn = styled.button`\r\n    margin: 0 auto;\r\n    margin-top: 15px;\r\n    width: 100px;\r\n    height: 30px;\r\n    border-width: 0px;\r\n    text-align: center;\r\n    border-radius: 5px;\r\n`\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n}\r\n\r\ninterface LoginForm {\r\n    id: string,\r\n    password: string,\r\n    // nickName: string,\r\n    // location: {\r\n    //     x: Number,\r\n    //     y: Number\r\n    // }\r\n}\r\n\r\nexport default function Login() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm<LoginForm>();\r\n    const [sessionID, setSessionID] = useRecoilState(session);\r\n    const [nickName, setNickName] = useRecoilState(name);\r\n    const [isLocationSaved, setIsLocationSaved] = useState<boolean>(false);\r\n    const setLogin = useSetRecoilState(loginState);\r\n\r\n    const LoginSuccess = async (data: LoginForm) => {\r\n        try {\r\n            const response = await axios.post('/login', data);\r\n            // console.log('로그인 응답 데이터:', response.data); // 로그인 응답 데이터 확인\r\n            const { sessionID, nickName } = response.data; // 세션 ID 및 사용자 이름 받아오기\r\n            if (response.data.message === '로그인 성공' && sessionID) {\r\n                setSessionID(sessionID); // 세션 ID 설정\r\n                setNickName(nickName); // 사용자 아이디 설정\r\n                sessionStorage.setItem('sessionID', sessionID); // 세션 스토리지에 세션 ID 저장\r\n                sessionStorage.setItem('nickName', nickName); // 세션 스토리지에 사용자 아이디 저장\r\n                // 위치 저장 요청 보내기\r\n                // saveLocation(sessionID); // 세션 ID를 인자로 사용하여 위치 저장 요청 보내기\r\n                alert(\"로그인에 성공했습니다.\");\r\n                setLogin(false);\r\n            } else {\r\n                console.error('로그인 실패:', response.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LoginContainer className=\"card\"\r\n                variants={boxVariants}\r\n                initial=\"initial\"\r\n                animate=\"visible\"\r\n                exit=\"leaving\"\r\n            >\r\n                <form onSubmit={handleSubmit(LoginSuccess)}>\r\n                    <div className=\"card-header\">\r\n                        로그인\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <LoginList className=\"list-group-item\"><LoginInput {...register(\"id\")} placeholder=\"아이디를 입력하세요\" /></LoginList>\r\n                        <LoginList className=\"list-group-item\"><LoginInput {...register(\"password\")} placeholder=\"비밀번호를 입력하세요\" /></LoginList>\r\n                        <LoginBtn type=\"submit\">로그인</LoginBtn>\r\n                    </ul>\r\n                </form>\r\n            </LoginContainer>\r\n            <Overlay />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}