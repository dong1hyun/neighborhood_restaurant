{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import axios from'axios';import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{motion}from\"framer-motion\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const LoginContainer=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    z-index: 1;\\n    top: 200px;\\n    left: 0;\\n    right: 0;\\n    margin: 0 auto;\\n    width: 400px;\\n    height: 200px;\\n    background-color: rgba(255, 255, 255, 1);\\n    border-radius: 40px;\\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\\n    text-align: center;\\n\"])));// 모션 변형\nconst boxVariants={initial:{opacity:0,scale:0},visible:{opacity:1,scale:1},leaving:{opacity:0,scale:0}};export default function LoginBox(){const[formData,setFormData]=useState({id:'',password:''});const[sessionID,setSessionID]=useState('');const[userName,setUserName]=useState('');const[isLocationSaved,setIsLocationSaved]=useState(false);const navigate=useNavigate();useEffect(()=>{// 페이지 로드 시 저장된 로그인 정보 확인\nconst loggedInSessionID=sessionStorage.getItem('sessionID');// 세션 스토리지에서 세션 아이디 가져오기\nconst loggedInUserName=sessionStorage.getItem('userName');// 세션 스토리지에서 이름 가져오기\nif(loggedInSessionID){setSessionID(loggedInSessionID);}if(loggedInUserName){setUserName(loggedInUserName);// 세션 스토리지에서 가져온 사용자 이름 설정\n}},[]);const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('/login',formData);console.log('로그인 응답 데이터:',response.data);// 로그인 응답 데이터 확인\nconst{sessionID,userName}=response.data;// 세션 ID 및 사용자 이름 받아오기\nif(response.data.message==='로그인 성공'&&sessionID){setSessionID(sessionID);// 세션 ID 설정\nsetUserName(userName);// 사용자 이름 설정\nsessionStorage.setItem('sessionID',sessionID);// 세션 스토리지에 세션 ID 저장\nsessionStorage.setItem('userName',userName);// 세션 스토리지에 사용자 이름 저장\n// 위치 저장 요청 보내기\nsaveLocation(sessionID);// 세션 ID를 인자로 사용하여 위치 저장 요청 보내기\n}else{console.error('로그인 실패:',response.data.message);}}catch(error){console.error('로그인 중 오류가 발생했습니다:',error);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const saveLocation=async sessionID=>{try{navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;await axios.post('/location',{sessionID,x:longitude,y:latitude});// 세션 ID로 위치 저장 요청 보내기\nsetIsLocationSaved(true);// 위치 저장됨을 표시\nalert('위치가 성공적으로 저장되었습니다.');});}catch(error){console.error('위치 저장 중 오류가 발생했습니다:',error);alert('위치를 저장하는 도중 오류가 발생했습니다.');}};const handleLogout=async()=>{try{await axios.get('/logout');// 서버로 로그아웃 요청 보냄\nsessionStorage.removeItem('sessionID');// 세션 스토리지에서 세션 ID 제거\nsetSessionID('');// 세션 ID 초기화\nsetUserName('');navigate('/');// 홈 페이지로 이동\n}catch(error){console.error('로그아웃 중 오류가 발생했습니다:',error);}};return/*#__PURE__*/_jsxs(LoginContainer,{variants:boxVariants,initial:\"initial\",animate:\"visible\",exit:\"leaving\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC544\\uC774\\uB514:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:formData.id,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uBE44\\uBC00\\uBC88\\uD638:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]}),sessionID&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC548\\uB155\\uD558\\uC138\\uC694, \",userName,\"\\uB2D8\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]})]});}","map":{"version":3,"names":["axios","React","useState","useEffect","useNavigate","motion","styled","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LoginContainer","div","_templateObject","_taggedTemplateLiteral","boxVariants","initial","opacity","scale","visible","leaving","LoginBox","formData","setFormData","id","password","sessionID","setSessionID","userName","setUserName","isLocationSaved","setIsLocationSaved","navigate","loggedInSessionID","sessionStorage","getItem","loggedInUserName","handleSubmit","e","preventDefault","response","post","console","log","data","message","setItem","saveLocation","error","handleChange","target","name","value","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","x","y","alert","handleLogout","get","removeItem","variants","animate","exit","children","onSubmit","type","onChange","onClick"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/LoginBox.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, ChangeEvent, FormEvent, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface FormData {\r\n    id: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 200px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n    text-align: center;\r\n`;\r\n\r\n// 모션 변형\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n};\r\n\r\nexport default function LoginBox() {\r\n    const [formData, setFormData] = useState<FormData>({ id: '', password: '' });\r\n    const [sessionID, setSessionID] = useState<string>('');\r\n    const [userName, setUserName] = useState<string>('');\r\n    const [isLocationSaved, setIsLocationSaved] = useState<boolean>(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // 페이지 로드 시 저장된 로그인 정보 확인\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID'); // 세션 스토리지에서 세션 아이디 가져오기\r\n        const loggedInUserName = sessionStorage.getItem('userName'); // 세션 스토리지에서 이름 가져오기\r\n        if (loggedInSessionID) {\r\n            setSessionID(loggedInSessionID);\r\n        }\r\n        if (loggedInUserName) {\r\n            setUserName(loggedInUserName); // 세션 스토리지에서 가져온 사용자 이름 설정\r\n    }\r\n    }, []);\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/login', formData);\r\n            console.log('로그인 응답 데이터:', response.data); // 로그인 응답 데이터 확인\r\n            const { sessionID, userName } = response.data; // 세션 ID 및 사용자 이름 받아오기\r\n            if (response.data.message === '로그인 성공' && sessionID) {\r\n                setSessionID(sessionID); // 세션 ID 설정\r\n                setUserName(userName); // 사용자 이름 설정\r\n                sessionStorage.setItem('sessionID', sessionID); // 세션 스토리지에 세션 ID 저장\r\n                sessionStorage.setItem('userName', userName); // 세션 스토리지에 사용자 이름 저장\r\n                // 위치 저장 요청 보내기\r\n                saveLocation(sessionID); // 세션 ID를 인자로 사용하여 위치 저장 요청 보내기\r\n            } else {\r\n                console.error('로그인 실패:', response.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n    \r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const saveLocation = async (sessionID: string) => {\r\n        try {\r\n            navigator.geolocation.getCurrentPosition(async (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                await axios.post('/location', { sessionID, x: longitude, y: latitude }); // 세션 ID로 위치 저장 요청 보내기\r\n                setIsLocationSaved(true); // 위치 저장됨을 표시\r\n                alert('위치가 성공적으로 저장되었습니다.');\r\n            });\r\n        } catch (error) {\r\n            console.error('위치 저장 중 오류가 발생했습니다:', error);\r\n            alert('위치를 저장하는 도중 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/logout'); // 서버로 로그아웃 요청 보냄\r\n            sessionStorage.removeItem('sessionID'); // 세션 스토리지에서 세션 ID 제거\r\n            setSessionID(''); // 세션 ID 초기화\r\n            setUserName('');\r\n            navigate('/'); // 홈 페이지로 이동\r\n        } catch (error) {\r\n            console.error('로그아웃 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <LoginContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">로그인</button>\r\n            </form>\r\n\r\n            {sessionID && (\r\n                <>\r\n                    <p>안녕하세요, {userName}님</p> \r\n                    <button onClick={handleLogout}>로그아웃</button>\r\n                </>\r\n            )}\r\n        </LoginContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}