{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import axios from'axios';import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{motion}from\"framer-motion\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginContainer=styled(motion.div)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    z-index: 1;\\n    top: 200px;\\n    left: 0;\\n    right: 0;\\n    margin: 0 auto;\\n    width: 400px;\\n    height: 200px;\\n    background-color: rgba(255, 255, 255, 1);\\n    border-radius: 40px;\\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\\n    text-align: center;\\n\"])));// 모션 변형\nconst boxVariants={initial:{opacity:0,scale:0},visible:{opacity:1,scale:1},leaving:{opacity:0,scale:0}};export default function LoginBox(){const[formData,setFormData]=useState({id:'',password:''});const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('/login',formData);console.log(response.data);if(response.data.message==='로그인 성공'){// 로그인 성공 시 홈 화면으로 이동\nnavigate('/');}else{console.error('로그인 실패:',response.data.message);}}catch(error){console.error('로그인 중 오류가 발생했습니다:',error);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};return/*#__PURE__*/_jsx(LoginContainer,{variants:boxVariants,initial:\"initial\",animate:\"visible\",exit:\"leaving\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uC544\\uC774\\uB514:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:formData.id,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"\\uBE44\\uBC00\\uBC88\\uD638:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]})});}","map":{"version":3,"names":["axios","React","useState","useNavigate","motion","styled","jsx","_jsx","jsxs","_jsxs","LoginContainer","div","_templateObject","_taggedTemplateLiteral","boxVariants","initial","opacity","scale","visible","leaving","LoginBox","formData","setFormData","id","password","navigate","handleSubmit","e","preventDefault","response","post","console","log","data","message","error","handleChange","target","name","value","variants","animate","exit","children","onSubmit","type","onChange"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/LoginBox.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface FormData {\r\n    id: string;\r\n    password: string;\r\n}\r\n\r\nconst LoginContainer = styled(motion.div)`\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 200px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    width: 400px;\r\n    height: 200px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n    border-radius: 40px;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\r\n    text-align: center;\r\n`;\r\n\r\n// 모션 변형\r\nconst boxVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        scale: 1\r\n    },\r\n    leaving: {\r\n        opacity: 0,\r\n        scale: 0\r\n    }\r\n};\r\n\r\nexport default function LoginBox() {\r\n    const [formData, setFormData] = useState<FormData>({ id: '', password: '' });\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/login', formData);\r\n            console.log(response.data);\r\n            if (response.data.message === '로그인 성공') {\r\n                // 로그인 성공 시 홈 화면으로 이동\r\n                navigate('/');\r\n            } else {\r\n                console.error('로그인 실패:', response.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('로그인 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <LoginContainer\r\n            variants={boxVariants}\r\n            initial=\"initial\"\r\n            animate=\"visible\"\r\n            exit=\"leaving\"\r\n        >\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    아이디:\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        value={formData.id}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    비밀번호:\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">로그인</button>\r\n            </form>\r\n        </LoginContainer>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}