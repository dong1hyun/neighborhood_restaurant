{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import axios from\"axios\";import{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LocationContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    height: 200px;\\n    /* background: linear-gradient(45deg, rgba(27, 156, 252,1.0), rgba(37, 204, 247,1.0)); */\\n    background-color: #2275eb97;\\n    margin-top: 30px;\\n    margin-bottom: 50px;\\n    text-align: center;\\n    /* @media screen and (max-width: 700px){\\n        scale: 0.8;        \\n    } */\\n\"])));const GetLocationButton=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    background-color: white;\\n    color: black;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    margin-top: 40px;\\n    cursor: pointer;\\n\"])));const SetLocationButton=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    background-color: white;\\n    color: black;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 5px;\\n    cursor: pointer;\\n\"])));const LocationForm=styled.form(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\nmargin-top: 40px;\\n\"])));const LocationInput=styled.input(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    width: 300px;\\n    height: 30px;\\n    border-radius: 5px;\\n    border: none;\\n    margin-right: 10px;\\n    padding-left: 10px;\\n\"])));export default function LocaionSet(){const[searchResult,setSearchResult]=useState('');const[userLocation,setUserLocation]=useState(null);const[userAddress,setUserAddress]=useState('');const[searchTerm,setSearchTerm]=useState('');const[sessionID,setSessionID]=useState('');const{register,handleSubmit}=useForm();const isAddressMatch=(address1,address2)=>{const regex=/(.+?(읍|면|동))/;const match1=address1.match(regex);const match2=address2.match(regex);return!!match1&&!!match2&&match1[1]===match2[1];};const sendLocationToServer=async(sessionID,address)=>{try{const response=await axios.post('/location',{sessionID,address});console.log('서버 응답:',response.data);}catch(error){console.error('서버로 위치 전송 중 오류가 발생했습니다:',error);}};const handleSearch=async()=>{try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/search/keyword.json?query=\".concat(searchTerm),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const{address_name}=response.data.documents[0];setSearchResult(address_name);if(isAddressMatch(address_name,userAddress)){console.log('검색된 위치가 사용자의 위치와 일치합니다.');sendLocationToServer(sessionID,address_name);}else{console.log('검색된 위치가 사용자의 위치와 일치하지 않습니다.');}}else{console.error('검색 결과를 찾을 수 없습니다.');}}catch(error){console.error('검색 중 오류가 발생했습니다:',error);}};const getAddressFromCoordinates=async(latitude,longitude)=>{try{const response=await axios.get(\"https://dapi.kakao.com/v2/local/geo/coord2address.json?x=\".concat(longitude,\"&y=\").concat(latitude),{headers:{Authorization:\"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"}});if(response.data.documents&&response.data.documents.length>0){const address=response.data.documents[0].address.address_name;return address;}else{console.error('주소를 찾을 수 없습니다.');return null;}}catch(error){console.error('주소를 가져오는 중 오류가 발생했습니다:',error);return null;}};const handleGetUserLocation=()=>{navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;setUserLocation({x:longitude,y:latitude});const address=await getAddressFromCoordinates(latitude,longitude);if(address){setUserAddress(address);console.log('사용자의 위치:',address);}});};useEffect(()=>{const loggedInSessionID=sessionStorage.getItem('sessionID')+'';setSessionID(loggedInSessionID);},[]);return/*#__PURE__*/_jsxs(LocationContainer,{children:[/*#__PURE__*/_jsx(GetLocationButton,{onClick:handleGetUserLocation,children:\"\\uB0B4 \\uC704\\uCE58 \\uAC00\\uC838\\uC624\\uAE30\"}),/*#__PURE__*/_jsxs(LocationForm,{onSubmit:handleSubmit(handleSearch),children:[/*#__PURE__*/_jsx(LocationInput,{placeholder:\"\\uC790\\uC2E0\\uC774 \\uC18D\\uD55C \\uC74D/\\uBA74/\\uB3D9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694!\",...register(\"location\",{required:true})}),/*#__PURE__*/_jsx(SetLocationButton,{type:\"submit\",children:\"\\uC778\\uC99D\\uD558\\uAE30\"})]})]});}","map":{"version":3,"names":["axios","useEffect","useState","useForm","styled","jsx","_jsx","jsxs","_jsxs","LocationContainer","div","_templateObject","_taggedTemplateLiteral","GetLocationButton","button","_templateObject2","SetLocationButton","_templateObject3","LocationForm","form","_templateObject4","LocationInput","input","_templateObject5","LocaionSet","searchResult","setSearchResult","userLocation","setUserLocation","userAddress","setUserAddress","searchTerm","setSearchTerm","sessionID","setSessionID","register","handleSubmit","isAddressMatch","address1","address2","regex","match1","match","match2","sendLocationToServer","address","response","post","console","log","data","error","handleSearch","get","concat","headers","Authorization","documents","length","address_name","getAddressFromCoordinates","latitude","longitude","handleGetUserLocation","navigator","geolocation","getCurrentPosition","position","coords","x","y","loggedInSessionID","sessionStorage","getItem","children","onClick","onSubmit","placeholder","required","type"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/LocationSet.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LocationContainer = styled.div`\r\n    height: 200px;\r\n    /* background: linear-gradient(45deg, rgba(27, 156, 252,1.0), rgba(37, 204, 247,1.0)); */\r\n    background-color: #2275eb97;\r\n    margin-top: 30px;\r\n    margin-bottom: 50px;\r\n    text-align: center;\r\n    /* @media screen and (max-width: 700px){\r\n        scale: 0.8;        \r\n    } */\r\n`\r\n\r\n\r\n\r\nconst GetLocationButton = styled.button`\r\n    background-color: white;\r\n    color: black;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    margin-top: 40px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SetLocationButton = styled.button`\r\n    background-color: white;\r\n    color: black;\r\n    border: none;\r\n    padding: 8px 16px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LocationForm = styled.form`\r\nmargin-top: 40px;\r\n`;\r\n\r\nconst LocationInput = styled.input`\r\n    width: 300px;\r\n    height: 30px;\r\n    border-radius: 5px;\r\n    border: none;\r\n    margin-right: 10px;\r\n    padding-left: 10px;\r\n`;\r\n\r\n\r\n\r\nexport default function LocaionSet() {\r\n    const [searchResult, setSearchResult] = useState<string>('');\r\n    const [userLocation, setUserLocation] = useState<{ x: number, y: number } | null>(null);\r\n    const [userAddress, setUserAddress] = useState<string>('');\r\n    const [searchTerm, setSearchTerm] = useState<string>('');\r\n    const [sessionID, setSessionID] = useState<string>('');\r\n    const { register, handleSubmit } = useForm();\r\n    const isAddressMatch = (address1: string, address2: string): boolean => {\r\n        const regex = /(.+?(읍|면|동))/;\r\n        const match1 = address1.match(regex);\r\n        const match2 = address2.match(regex);\r\n        return !!match1 && !!match2 && match1[1] === match2[1];\r\n    };\r\n\r\n    const sendLocationToServer = async (sessionID: string, address: string) => {\r\n        try {\r\n            const response = await axios.post('/location', { sessionID, address });\r\n            console.log('서버 응답:', response.data);\r\n        } catch (error) {\r\n            console.error('서버로 위치 전송 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/search/keyword.json?query=${searchTerm}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const { address_name } = response.data.documents[0];\r\n                setSearchResult(address_name);\r\n                if (isAddressMatch(address_name, userAddress)) {\r\n                    console.log('검색된 위치가 사용자의 위치와 일치합니다.');\r\n                    sendLocationToServer(sessionID, address_name);\r\n                } else {\r\n                    console.log('검색된 위치가 사용자의 위치와 일치하지 않습니다.');\r\n                }\r\n            } else {\r\n                console.error('검색 결과를 찾을 수 없습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('검색 중 오류가 발생했습니다:', error);\r\n        }\r\n    };\r\n\r\n    const getAddressFromCoordinates = async (latitude: number, longitude: number) => {\r\n        try {\r\n            const response = await axios.get(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${longitude}&y=${latitude}`, {\r\n                headers: {\r\n                    Authorization: \"KakaoAK f1a6ff5fce786c3d0407226bb3e8ec57\"\r\n                }\r\n            });\r\n            if (response.data.documents && response.data.documents.length > 0) {\r\n                const address = response.data.documents[0].address.address_name;\r\n                return address;\r\n            } else {\r\n                console.error('주소를 찾을 수 없습니다.');\r\n                return null;\r\n            }\r\n        } catch (error) {\r\n            console.error('주소를 가져오는 중 오류가 발생했습니다:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const handleGetUserLocation = () => {\r\n        navigator.geolocation.getCurrentPosition(async (position) => {\r\n            const { latitude, longitude } = position.coords;\r\n            setUserLocation({ x: longitude, y: latitude });\r\n            const address = await getAddressFromCoordinates(latitude, longitude);\r\n            if (address) {\r\n                setUserAddress(address);\r\n                console.log('사용자의 위치:', address);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loggedInSessionID = sessionStorage.getItem('sessionID') + '';\r\n        setSessionID(loggedInSessionID);\r\n    }, [])\r\n    return (\r\n        <LocationContainer>\r\n            <GetLocationButton onClick={handleGetUserLocation}>내 위치 가져오기</GetLocationButton>\r\n            <LocationForm onSubmit={handleSubmit(handleSearch)}>\r\n                <LocationInput\r\n                    placeholder=\"자신이 속한 읍/면/동을 입력해주세요!\"\r\n                    {...register(\"location\", {required: true})}\r\n                />\r\n                <SetLocationButton type=\"submit\">인증하기</SetLocationButton>\r\n            </LocationForm>\r\n        </LocationContainer>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}