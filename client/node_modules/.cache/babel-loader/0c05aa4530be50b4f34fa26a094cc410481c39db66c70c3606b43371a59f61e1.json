{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import{useForm}from\"react-hook-form\";import styled from\"styled-components\";import{useNavigate}from\"react-router-dom\";import{useRecoilState,useSetRecoilState}from\"recoil\";import{keyword,neighborhood_search,register_showing}from\"../atom\";import{motion}from\"framer-motion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Nav=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    background-color: black;\\n    height: 100px;\\n    width: 100%;\\n    @media screen and (max-width: 700px) {\\n        flex-direction: column;\\n        align-items: flex-start;\\n        height: 250px;\\n    }\\n\"])));const Logo=styled(motion.div)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    text-decoration: none;\\n    color: white;\\n    margin-left: 30px;\\n    margin-top:33px;\\n    margin-bottom: 10px;\\n    cursor: pointer;\\n    font-size: 40px;\\n    font-family: \\\"Black Han Sans\\\", sans-serif;\\n    font-weight: 400;\\n    font-style: normal;\\n\"])));const Search=styled.form(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    position: relative;\\n    background-color: whitesmoke;\\n    width: 400px;\\n    height: 50px;\\n    margin: 25px;\\n    border-radius: 10px;\\n\"])));const SearchInput=styled.input(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    left: 35px;\\n    top: 10px;\\n    width: 300px;\\n    height: 30px;\\n    font-size: 20px;\\n    border-radius: 10px;\\n    border-width: 0;\\n    background-color: whitesmoke;\\n    border-width: 0px;\\n    outline: none;\\n\"])));const SearchBtn=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    background-color: transparent;\\n    border-width: 0px;\\n    top: 15px;\\n    right: 10px;\\n    width: 50px;\\n\"])));const DeleteBtn=styled(motion.button)(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 13px;\\n    left: 5px;\\n    margin-right: 100yypx;\\n    background-color: transparent;\\n    border-radius: 5px;\\n    background-color: #d8d8d8;\\n    border-width: 0px;\\n    hover: {scale: 1.2}\\n\"])));const LoginContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n    margin: 20px;\\n\"])));const Login=styled(motion.div)(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n    color: white;\\n    margin: 10px;\\n    cursor: pointer;\\n\"])));const WelcomeMessage=styled.span(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n    color: white;\\n    margin-right: 20px;\\n\"])));export default function Header(){const{register,handleSubmit,getValues,watch}=useForm();const navigate=useNavigate();const setSearchWord=useSetRecoilState(keyword);const[isNeighborhood,setIsNeighborhood]=useRecoilState(neighborhood_search);const[isLoggedIn,setIsLoggedIn]=useState(false);const[name,setName]=useState('');const onValid=_ref=>{let{search}=_ref;setSearchWord(search);navigate(\"/search?keyword=\".concat(search));};const searchTypeClick=async()=>{setIsNeighborhood(cur=>!cur);};const setRegisterShowing=useSetRecoilState(register_showing);const onRegisterClick=()=>{setRegisterShowing(cur=>!cur);};// 여기에 로그인한 사용자를 표시하는 코드 추가\nuseEffect(()=>{// 이 부분에서 로그인 여부를 확인하고, 사용자 이름을 설정합니다.\nconst user=localStorage.getItem('user');if(user){const parsedUser=JSON.parse(user);setName(parsedUser.name);setIsLoggedIn(true);}},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Nav,{children:[/*#__PURE__*/_jsx(Logo,{transition:{type:\"spring\",damping:10},initial:{scale:0},animate:{scale:1},whileHover:{scale:1.2},onClick:()=>navigate(\"/\"),children:\"\\uB3D9\\uB124\\uB9DB\\uC9D1\"}),/*#__PURE__*/_jsxs(Search,{onSubmit:handleSubmit(onValid),children:[watch('search')?/*#__PURE__*/_jsx(DeleteBtn,{className:\"btn-close\",\"aria-label\":\"Close\",type:\"reset\"}):null,/*#__PURE__*/_jsx(SearchInput,{...register(\"search\",{required:true})}),/*#__PURE__*/_jsx(SearchBtn,{type:\"submit\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"25\",height:\"25\",fill:\"currentColor\",className:\"bi bi-search\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"})})})]}),/*#__PURE__*/_jsx(LoginContainer,{children:isLoggedIn?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(WelcomeMessage,{children:[\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4, \",name,\" \\uB2D8\"]}),/*#__PURE__*/_jsx(Login,{onClick:()=>{localStorage.removeItem('user');setIsLoggedIn(false);},children:\"\\uB85C\\uADF8\\uC544\\uC6C3\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Login,{onClick:()=>{navigate(\"/register\");},children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsx(Login,{onClick:()=>{navigate(\"/login\");},children:\"\\uB85C\\uADF8\\uC778\"})]})})]})});}","map":{"version":3,"names":["useForm","styled","useNavigate","useRecoilState","useSetRecoilState","keyword","neighborhood_search","register_showing","motion","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Nav","div","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","Search","form","_templateObject3","SearchInput","input","_templateObject4","SearchBtn","button","_templateObject5","DeleteBtn","_templateObject6","LoginContainer","_templateObject7","Login","_templateObject8","WelcomeMessage","span","_templateObject9","Header","register","handleSubmit","getValues","watch","navigate","setSearchWord","isNeighborhood","setIsNeighborhood","isLoggedIn","setIsLoggedIn","useState","name","setName","onValid","_ref","search","concat","searchTypeClick","cur","setRegisterShowing","onRegisterClick","useEffect","user","localStorage","getItem","parsedUser","JSON","parse","children","transition","type","damping","initial","scale","animate","whileHover","onClick","onSubmit","className","required","xmlns","width","height","fill","viewBox","d","removeItem"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/Header.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport { keyword, neighborhood_search, register_showing } from \"../atom\";\r\nimport axios from \"axios\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst Nav = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: black;\r\n    height: 100px;\r\n    width: 100%;\r\n    @media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        height: 250px;\r\n    }\r\n`;\r\n\r\nconst Logo = styled(motion.div)`\r\n    text-decoration: none;\r\n    color: white;\r\n    margin-left: 30px;\r\n    margin-top:33px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    font-size: 40px;\r\n    font-family: \"Black Han Sans\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n`;\r\n\r\nconst Search = styled.form`\r\n    position: relative;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 50px;\r\n    margin: 25px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 10px;\r\n    width: 300px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border-width: 0;\r\n    background-color: whitesmoke;\r\n    border-width: 0px;\r\n    outline: none;\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n    position: absolute;\r\n    background-color: transparent;\r\n    border-width: 0px;\r\n    top: 15px;\r\n    right: 10px;\r\n    width: 50px;\r\n`;\r\n\r\nconst DeleteBtn = styled(motion.button)`\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 5px;\r\n    margin-right: 100yypx;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    background-color: #d8d8d8;\r\n    border-width: 0px;\r\n    hover: {scale: 1.2}\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    margin: 20px;\r\n`;\r\n\r\nconst Login = styled(motion.div)`\r\n    color: white;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst WelcomeMessage = styled.span`\r\n    color: white;\r\n    margin-right: 20px;\r\n`;\r\n\r\ninterface DataForm {\r\n    search: string\r\n}\r\n\r\nexport default function Header() {\r\n    const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n    const navigate = useNavigate();\r\n    const setSearchWord = useSetRecoilState(keyword);\r\n    const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const onValid = ({ search }: DataForm) => {\r\n        setSearchWord(search);\r\n        navigate(`/search?keyword=${search}`);\r\n    };\r\n\r\n    const searchTypeClick = async () => {\r\n        setIsNeighborhood((cur) => !cur);\r\n    };\r\n\r\n    const setRegisterShowing = useSetRecoilState(register_showing);\r\n\r\n    const onRegisterClick = () => {\r\n        setRegisterShowing((cur) => !cur);\r\n    };\r\n\r\n    // 여기에 로그인한 사용자를 표시하는 코드 추가\r\n    useEffect(() => {\r\n        // 이 부분에서 로그인 여부를 확인하고, 사용자 이름을 설정합니다.\r\n        const user = localStorage.getItem('user');\r\n        if (user) {\r\n            const parsedUser = JSON.parse(user);\r\n            setName(parsedUser.name);\r\n            setIsLoggedIn(true);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n                <Logo\r\n                    transition={{ type: \"spring\", damping: 10 }}\r\n                    initial={{ scale: 0 }}\r\n                    animate={{ scale: 1 }}\r\n                    whileHover={{ scale: 1.2 }}\r\n                    onClick={() => navigate(\"/\")}\r\n                >\r\n                    동네맛집\r\n                </Logo>\r\n                <Search onSubmit={handleSubmit(onValid)}>\r\n                    {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n                    <SearchInput {...register(\"search\", { required: true })} />\r\n                    <SearchBtn type=\"submit\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n                        </svg>\r\n                    </SearchBtn>\r\n                </Search>\r\n                <LoginContainer>\r\n                    {isLoggedIn ? (\r\n                        <>\r\n                            <WelcomeMessage>환영합니다, {name} 님</WelcomeMessage>\r\n                            <Login onClick={() => { localStorage.removeItem('user'); setIsLoggedIn(false); }}>로그아웃</Login>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <Login onClick={() => { navigate(\"/register\") }}>회원가입</Login>\r\n                            <Login onClick={() => { navigate(\"/login\") }}>로그인</Login>\r\n                        </>\r\n                    )}\r\n                </LoginContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}