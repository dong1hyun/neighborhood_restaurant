{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\neighborhood_restaurant\\\\client\\\\src\\\\components\\\\Header.tsx\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\"\n// import styled from \"styled-components\"\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\n// import axios from \"axios\";\n// import { AnimatePresence, motion } from \"framer-motion\"\n\n// const Nav = styled.div`\n//     display: flex;\n//     justify-content: space-between;\n//     background-color: black;\n//     height: 100px;\n//     width: 100%;\n//     @media screen and (max-width: 700px) {\n//         flex-direction: column;\n//         align-items: flex-start;\n//         height: 250px;\n// }\n// `\n\n// const Logo = styled(motion.div)`\n//     text-decoration: none;\n//     color: white;\n//     margin-left: 30px;\n//     margin-top:33px;\n//     margin-bottom: 10px;\n//     cursor: pointer;\n//     font-size: 40px;\n//     font-family: \"Black Han Sans\", sans-serif;\n//     font-weight: 400;\n//     font-style: normal;\n// `\n\n// // const SearchContainer = styled.div`\n// //     position: relative;\n// //     background-color: whitesmoke;\n// //     width: 400px;\n// //     height: 50px;\n// //     margin: 25px;\n// //     border-radius: 10px;\n// // `\n\n// const Search = styled.form`\n//     position: relative;\n//     background-color: whitesmoke;\n//     width: 400px;\n//     height: 50px;\n//     margin: 25px;\n//     border-radius: 10px;\n// `\n\n// const SearchInput = styled.input`\n//     position: absolute;\n//     left: 35px;\n//     top: 10px;\n//     width: 300px;\n//     height: 30px;\n//     font-size: 20px;\n//     border-radius: 10px;\n//     border-width: 0;\n//     background-color: whitesmoke;\n//     border-width: 0px;\n//     outline: none;\n// `\n\n// const SearchBtn = styled.button`\n//     position: absolute;\n//     background-color: transparent;\n//     border-width: 0px;\n//     top: 15px;\n//     right: 10px;\n//     width: 50px;\n// `\n\n// const DeleteBtn = styled(motion.button)`\n//     position: absolute;\n//     top: 13px;\n//     left: 5px;\n//     margin-right: 100yypx;\n//     background-color: transparent;\n//     border-radius: 5px;\n//     background-color: #d8d8d8;\n//     border-width: 0px;\n//     hover: {scale: 1.2}\n// `\n\n// const LoginContainer = styled.div`\n//     margin: 20px;\n// `\n\n// const Login = styled(motion.div)`\n//     color: white;\n//     margin: 10px;\n//     cursor: pointer;\n// `\n\n// interface DataForm {\n//     search: string\n// }\n\n// export default function Header() {\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\n//     const navigate = useNavigate();\n//     const setSearchWord = useSetRecoilState(keyword);\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\n//     const onValid = ({ search }: DataForm) => {\n//         setSearchWord(search);\n//         // console.log(\"header:\", search)\n//         navigate(`/search?keyword=${search}`);\n//     }\n//     const searchTypeClick = async () => {\n//         setIsNeighborhood((cur) => !cur)\n//     }\n//     const setRegisterShowing = useSetRecoilState(register_showing);\n//     const onRegisterClick = () => {\n//         setRegisterShowing((cur) => !cur);\n//     }\n//     return (\n//         <>\n//             <Nav>\n//             <Logo\n//                 transition={{ type: \"spring\", damping: 10 }}\n//                 initial={{ scale: 0 }}\n//                 animate={{ scale: 1 }}\n//                 whileHover={{ scale: 1.2 }}\n//                 onClick={() => navigate(\"/\")}>\n//                     동네맛집\n//                 </Logo>\n//                 <Search onSubmit={handleSubmit(onValid)}>\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\n//                     <SearchInput {...register(\"search\", { required: true })} />\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\n//                     </svg></SearchBtn>\n//                 </Search>\n//                 <LoginContainer>\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\n//                 </LoginContainer>\n//             </Nav>  \n//         </>\n//     )\n// }\n\nimport { useEffect } from 'react'; // 새로 추가\nimport axios from 'axios';\nimport { useRecoilState, useSetRecoilState } from 'recoil'; // 수정\nimport { keyword, neighborhood_search, register_showing, userState } from '../atom'; // 수정\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Nav = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: black;\n    height: 100px;\n    width: 100%;\n    @media screen and (max-width: 700px) {\n        flex-direction: column;\n        align-items: flex-start;\n        height: 250px;\n    }\n`;\n_c = Nav;\nconst Logo = styled(motion.div)`\n    text-decoration: none;\n    color: white;\n    margin-left: 30px;\n    margin-top:33px;\n    margin-bottom: 10px;\n    cursor: pointer;\n    font-size: 40px;\n    font-family: \"Black Han Sans\", sans-serif;\n    font-weight: 400;\n    font-style: normal;\n`;\n_c2 = Logo;\nconst Search = styled.form`\n    position: relative;\n    background-color: whitesmoke;\n    width: 400px;\n    height: 50px;\n    margin: 25px;\n    border-radius: 10px;\n`;\n_c3 = Search;\nconst SearchInput = styled.input`\n    position: absolute;\n    left: 35px;\n    top: 10px;\n    width: 300px;\n    height: 30px;\n    font-size: 20px;\n    border-radius: 10px;\n    border-width: 0;\n    background-color: whitesmoke;\n    border-width: 0px;\n    outline: none;\n`;\n_c4 = SearchInput;\nconst SearchBtn = styled.button`\n    position: absolute;\n    background-color: transparent;\n    border-width: 0px;\n    top: 15px;\n    right: 10px;\n    width: 50px;\n`;\n_c5 = SearchBtn;\nconst DeleteBtn = styled(motion.button)`\n    position: absolute;\n    top: 13px;\n    left: 5px;\n    margin-right: 100yypx;\n    background-color: transparent;\n    border-radius: 5px;\n    background-color: #d8d8d8;\n    border-width: 0px;\n    hover: {scale: 1.2};\n`;\n_c6 = DeleteBtn;\nconst LoginContainer = styled.div`\n    margin: 20px;\n`;\n_c7 = LoginContainer;\nconst Login = styled(motion.div)`\n    color: white;\n    margin: 10px;\n    cursor: pointer;\n`;\n_c8 = Login;\nexport default function Header() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    watch\n  } = useForm();\n  const navigate = useNavigate();\n  const setSearchWord = useSetRecoilState(keyword);\n  const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\n  const [user, setUser] = useRecoilState(userState); // 새로운 Recoil 상태 추가\n  const onValid = ({\n    search\n  }) => {\n    setSearchWord(search);\n    navigate(`/search?keyword=${search}`);\n  };\n  const searchTypeClick = async () => {\n    setIsNeighborhood(cur => !cur);\n  };\n  const setRegisterShowing = useSetRecoilState(register_showing);\n  const onRegisterClick = () => {\n    setRegisterShowing(cur => !cur);\n  };\n  useEffect(() => {\n    // 유저 정보를 가져오는 부분\n    async function fetchUserData() {\n      try {\n        const response = await axios.get('/user'); // 적절한 엔드포인트로 수정\n        setUser(response.data);\n      } catch (error) {\n        console.error('유저 정보를 가져오는 중에 오류가 발생했습니다:', error);\n      }\n    }\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Nav, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        transition: {\n          type: \"spring\",\n          damping: 10\n        },\n        initial: {\n          scale: 0\n        },\n        animate: {\n          scale: 1\n        },\n        whileHover: {\n          scale: 1.2\n        },\n        onClick: () => navigate(\"/\"),\n        children: \"\\uB3D9\\uB124\\uB9DB\\uC9D1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSubmit: handleSubmit(onValid),\n        children: [watch('search') ? /*#__PURE__*/_jsxDEV(DeleteBtn, {\n          className: \"btn-close\",\n          \"aria-label\": \"Close\",\n          type: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 40\n        }, this) : null, /*#__PURE__*/_jsxDEV(SearchInput, {\n          ...register(\"search\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchBtn, {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"25\",\n            height: \"25\",\n            fill: \"currentColor\",\n            className: \"bi bi-search\",\n            viewBox: \"0 0 16 16\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginContainer, {\n        children: [user ? `안녕하세요, ${user.username}님` : /*#__PURE__*/_jsxDEV(Login, {\n          onClick: () => {\n            navigate('/register');\n          },\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(Login, {\n          onClick: () => {\n            navigate('/login');\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Header, \"1B5IurJca3MVSzKrL9hl80w8acU=\", true, function () {\n  return [useNavigate, useSetRecoilState, useRecoilState, useRecoilState, useSetRecoilState];\n});\n_c9 = Header;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Search\");\n$RefreshReg$(_c4, \"SearchInput\");\n$RefreshReg$(_c5, \"SearchBtn\");\n$RefreshReg$(_c6, \"DeleteBtn\");\n$RefreshReg$(_c7, \"LoginContainer\");\n$RefreshReg$(_c8, \"Login\");\n$RefreshReg$(_c9, \"Header\");","map":{"version":3,"names":["useEffect","axios","useRecoilState","useSetRecoilState","keyword","neighborhood_search","register_showing","userState","useNavigate","motion","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Nav","div","_c","Logo","_c2","Search","form","_c3","SearchInput","input","_c4","SearchBtn","button","_c5","DeleteBtn","_c6","LoginContainer","_c7","Login","_c8","Header","_s","register","handleSubmit","getValues","watch","useForm","navigate","setSearchWord","isNeighborhood","setIsNeighborhood","user","setUser","onValid","search","searchTypeClick","cur","setRegisterShowing","onRegisterClick","fetchUserData","response","get","data","error","console","children","transition","type","damping","initial","scale","animate","whileHover","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","required","xmlns","width","height","fill","viewBox","d","username","_c9","$RefreshReg$"],"sources":["C:/Users/user/Documents/GitHub/neighborhood_restaurant/client/src/components/Header.tsx"],"sourcesContent":["// import { useForm } from \"react-hook-form\"\r\n// import styled from \"styled-components\"\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\r\n// import { keyword, neighborhood_search, register_showing } from \"../atom\";\r\n// import axios from \"axios\";\r\n// import { AnimatePresence, motion } from \"framer-motion\"\r\n\r\n\r\n// const Nav = styled.div`\r\n//     display: flex;\r\n//     justify-content: space-between;\r\n//     background-color: black;\r\n//     height: 100px;\r\n//     width: 100%;\r\n//     @media screen and (max-width: 700px) {\r\n//         flex-direction: column;\r\n//         align-items: flex-start;\r\n//         height: 250px;\r\n// }\r\n// `\r\n\r\n// const Logo = styled(motion.div)`\r\n//     text-decoration: none;\r\n//     color: white;\r\n//     margin-left: 30px;\r\n//     margin-top:33px;\r\n//     margin-bottom: 10px;\r\n//     cursor: pointer;\r\n//     font-size: 40px;\r\n//     font-family: \"Black Han Sans\", sans-serif;\r\n//     font-weight: 400;\r\n//     font-style: normal;\r\n// `\r\n\r\n// // const SearchContainer = styled.div`\r\n// //     position: relative;\r\n// //     background-color: whitesmoke;\r\n// //     width: 400px;\r\n// //     height: 50px;\r\n// //     margin: 25px;\r\n// //     border-radius: 10px;\r\n// // `\r\n\r\n// const Search = styled.form`\r\n//     position: relative;\r\n//     background-color: whitesmoke;\r\n//     width: 400px;\r\n//     height: 50px;\r\n//     margin: 25px;\r\n//     border-radius: 10px;\r\n// `\r\n\r\n// const SearchInput = styled.input`\r\n//     position: absolute;\r\n//     left: 35px;\r\n//     top: 10px;\r\n//     width: 300px;\r\n//     height: 30px;\r\n//     font-size: 20px;\r\n//     border-radius: 10px;\r\n//     border-width: 0;\r\n//     background-color: whitesmoke;\r\n//     border-width: 0px;\r\n//     outline: none;\r\n// `\r\n\r\n// const SearchBtn = styled.button`\r\n//     position: absolute;\r\n//     background-color: transparent;\r\n//     border-width: 0px;\r\n//     top: 15px;\r\n//     right: 10px;\r\n//     width: 50px;\r\n// `\r\n\r\n// const DeleteBtn = styled(motion.button)`\r\n//     position: absolute;\r\n//     top: 13px;\r\n//     left: 5px;\r\n//     margin-right: 100yypx;\r\n//     background-color: transparent;\r\n//     border-radius: 5px;\r\n//     background-color: #d8d8d8;\r\n//     border-width: 0px;\r\n//     hover: {scale: 1.2}\r\n// `\r\n\r\n// const LoginContainer = styled.div`\r\n//     margin: 20px;\r\n// `\r\n\r\n// const Login = styled(motion.div)`\r\n//     color: white;\r\n//     margin: 10px;\r\n//     cursor: pointer;\r\n// `\r\n\r\n// interface DataForm {\r\n//     search: string\r\n// }\r\n\r\n// export default function Header() {\r\n//     const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n//     const navigate = useNavigate();\r\n//     const setSearchWord = useSetRecoilState(keyword);\r\n//     const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n//     const onValid = ({ search }: DataForm) => {\r\n//         setSearchWord(search);\r\n//         // console.log(\"header:\", search)\r\n//         navigate(`/search?keyword=${search}`);\r\n//     }\r\n//     const searchTypeClick = async () => {\r\n//         setIsNeighborhood((cur) => !cur)\r\n//     }\r\n//     const setRegisterShowing = useSetRecoilState(register_showing);\r\n//     const onRegisterClick = () => {\r\n//         setRegisterShowing((cur) => !cur);\r\n//     }\r\n//     return (\r\n//         <>\r\n//             <Nav>\r\n//             <Logo\r\n//                 transition={{ type: \"spring\", damping: 10 }}\r\n//                 initial={{ scale: 0 }}\r\n//                 animate={{ scale: 1 }}\r\n//                 whileHover={{ scale: 1.2 }}\r\n//                 onClick={() => navigate(\"/\")}>\r\n//                     동네맛집\r\n//                 </Logo>\r\n//                 <Search onSubmit={handleSubmit(onValid)}>\r\n//                     {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n//                     <SearchInput {...register(\"search\", { required: true })} />\r\n//                     <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n//                         <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n//                     </svg></SearchBtn>\r\n//                 </Search>\r\n//                 <LoginContainer>\r\n//                     <Login onClick={() => { navigate('/register') }}>회원가입</Login>\r\n//                     <Login onClick={() => { navigate('/login') }}>로그인</Login>\r\n//                 </LoginContainer>\r\n//             </Nav>  \r\n//         </>\r\n//     )\r\n// }\r\n\r\nimport { useState, useEffect } from 'react'; // 새로 추가\r\nimport axios from 'axios';\r\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'; // 수정\r\nimport { keyword, neighborhood_search, register_showing, userState } from '../atom'; // 수정\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: black;\r\n    height: 100px;\r\n    width: 100%;\r\n    @media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        height: 250px;\r\n    }\r\n`;\r\n\r\nconst Logo = styled(motion.div)`\r\n    text-decoration: none;\r\n    color: white;\r\n    margin-left: 30px;\r\n    margin-top:33px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    font-size: 40px;\r\n    font-family: \"Black Han Sans\", sans-serif;\r\n    font-weight: 400;\r\n    font-style: normal;\r\n`;\r\n\r\nconst Search = styled.form`\r\n    position: relative;\r\n    background-color: whitesmoke;\r\n    width: 400px;\r\n    height: 50px;\r\n    margin: 25px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 10px;\r\n    width: 300px;\r\n    height: 30px;\r\n    font-size: 20px;\r\n    border-radius: 10px;\r\n    border-width: 0;\r\n    background-color: whitesmoke;\r\n    border-width: 0px;\r\n    outline: none;\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n    position: absolute;\r\n    background-color: transparent;\r\n    border-width: 0px;\r\n    top: 15px;\r\n    right: 10px;\r\n    width: 50px;\r\n`;\r\n\r\nconst DeleteBtn = styled(motion.button)`\r\n    position: absolute;\r\n    top: 13px;\r\n    left: 5px;\r\n    margin-right: 100yypx;\r\n    background-color: transparent;\r\n    border-radius: 5px;\r\n    background-color: #d8d8d8;\r\n    border-width: 0px;\r\n    hover: {scale: 1.2};\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n    margin: 20px;\r\n`;\r\n\r\nconst Login = styled(motion.div)`\r\n    color: white;\r\n    margin: 10px;\r\n    cursor: pointer;\r\n`;\r\n\r\ninterface DataForm {\r\n    search: string;\r\n}\r\n\r\nexport default function Header() {\r\n    const { register, handleSubmit, getValues, watch } = useForm<DataForm>();\r\n    const navigate = useNavigate();\r\n    const setSearchWord = useSetRecoilState(keyword);\r\n    const [isNeighborhood, setIsNeighborhood] = useRecoilState(neighborhood_search);\r\n    const [user, setUser] = useRecoilState(userState); // 새로운 Recoil 상태 추가\r\n    const onValid = ({ search }: DataForm) => {\r\n        setSearchWord(search);\r\n        navigate(`/search?keyword=${search}`);\r\n    };\r\n    const searchTypeClick = async () => {\r\n        setIsNeighborhood((cur) => !cur);\r\n    };\r\n    const setRegisterShowing = useSetRecoilState(register_showing);\r\n    const onRegisterClick = () => {\r\n        setRegisterShowing((cur) => !cur);\r\n    };\r\n\r\n    useEffect(() => { // 유저 정보를 가져오는 부분\r\n        async function fetchUserData() {\r\n            try {\r\n                const response = await axios.get('/user'); // 적절한 엔드포인트로 수정\r\n                setUser(response.data);\r\n            } catch (error) {\r\n                console.error('유저 정보를 가져오는 중에 오류가 발생했습니다:', error);\r\n            }\r\n        }\r\n\r\n        fetchUserData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Nav>\r\n            <Logo\r\n                transition={{ type: \"spring\", damping: 10 }}\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1 }}\r\n                whileHover={{ scale: 1.2 }}\r\n                onClick={() => navigate(\"/\")}>\r\n                    동네맛집\r\n                </Logo>\r\n                <Search onSubmit={handleSubmit(onValid)}>\r\n                    {watch('search') ? <DeleteBtn className=\"btn-close\" aria-label=\"Close\" type=\"reset\" /> : null}\r\n                    <SearchInput {...register(\"search\", { required: true })} />\r\n                    <SearchBtn type=\"submit\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0\" />\r\n                    </svg></SearchBtn>\r\n                </Search>\r\n                <LoginContainer>\r\n                    {user ? `안녕하세요, ${user.username}님` : <Login onClick={() => { navigate('/register') }}>회원가입</Login>}\r\n                    <Login onClick={() => { navigate('/login') }}>로그인</Login>\r\n                </LoginContainer>\r\n            </Nav>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAmBA,SAAS,QAAQ,OAAO,CAAC,CAAC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAkBC,iBAAiB,QAAQ,QAAQ,CAAC,CAAC;AAC5E,SAASC,OAAO,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,SAAS,QAAQ,SAAS,CAAC,CAAC;AACrF,SAAeC,WAAW,QAAQ,kBAAkB;AACpD,SAA0BC,MAAM,QAAQ,eAAe;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,GAAG,GAAGL,MAAM,CAACM,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,GAAG;AAaT,MAAMG,IAAI,GAAGR,MAAM,CAACD,MAAM,CAACO,GAAG,CAAE;AAChC;AACA;AACA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}